"SATD","Sentiment"
"// This is turned off temporarily. There appears to be a bug // in SelectorUtils.matchPattern() where it is recursive on // Windows even if no ** is in pattern. //assertEquals(""FFFTFFFFFFFF"", results); // Unix // vs //assertEquals(""FFFTFFFFTFFF"", results); // Windows","negative"
"// pattern now holds ** while string is not exhausted // this will generate false positives but we can live with that.","mixed"
"// FIXME: Is ""No Namespace is Empty Namespace"" really OK?","negative"
"// FIXME this is actually not very cpu cycles friendly as we are converting from // dos to java while the underlying Sun implementation will convert // from java to dos time for internal storage...","negative"
"// check first that it is not already loaded otherwise // consecutive runs seems to end into an OutOfMemoryError // or it fails when there is a native library to load // several times. // this is far from being perfect but should work // in most cases.","mixed"
"// TODO: // A warning line, that shows code, which contains a variable // error will cause some trouble. The parser should definitely // be much better.","negative"
"// Don't try restoring the URL TODO: wy not?","non-negative"
"// FIXME Due to startEngine being commented engine will always be null //private StandardJMeterEngine engine","non-negative"
"// NOTE: these lines center the about dialog in the // current window. Some older Swing versions have // a bug in getLocationOnScreen() and they may not // make this behave properly.","non-negative"
"// TODO display warning dialog as this can take some time","non-negative"
"""/* * TODO: error counting needs to be sorted out. * * At present the Statistical Sampler tracks errors separately * It would make sense to move the error count here, but this would * mean lots of changes. * It's also tricky maintaining the count - it can't just be incremented/decremented * when the success flag is set as this may be done multiple times. * The work-round for now is to do the work in the StatisticalSampleResult, * which overrides this method. * Note that some JMS samplers also create samples with > 1 sample count * Also the Transaction Controller probably needs to be changed to do * proper sample and error accounting. * The purpose of this work-round is to allow at least minimal support for * errors in remote statistical batch mode. * */""","negative"
"""/* * URGENT: TODO - sort out equals and hashCode() - at present equal * instances can/will have different hashcodes - problem is, when a proper * hashcode is used, tests stop working, e.g. listener data disappears when * switching views... This presumably means that instances currently * regarded as equal, aren't really equal. * * @see java.lang.Object#hashCode() */""","negative"
"/* TODO: Why does the next part not work? */","negative"
"// TODO: We don't really want this to be filled, but if it's not then // the user can't double click in the compartment to add a new literal // Apparently GEF thinks unfilled figs are only selectable by border // setFilled(false);","negative"
"// TODO: We can't have a global ""current"" language // NotationProviderFactory2.setCurrentLanguage(newLanguage);","non-negative"
"// TODO: We should warn the user we have removed something - tfm","non-negative"
"// If we are not visible most likely // we're being deleted. // TODO: This indicates a more fundamental problem that // should be investigated - tfm - 20061230","negative"
"// TODO: - should save and restore the last positions of the toolbars","non-negative"
"// bug #997560 (fdietz): CC: should be in Cc:, instead of To:","non-negative"
"// FIXME this is not correct","negative"
"// FIXME correct year calculation","non-negative"
"// FIXME check if the id is a correct file name!","non-negative"
"// TODO: newUID, generate correctly formatted date string","non-negative"
"// TODO fix doctype","non-negative"
"// Bug 124306: we should rely on XMLCalendar to normalize Dave value, to ensure that all Date value // fields are taken into account.","non-negative"
"// is this an error???","negative"
"//FB Won't compile with VAJ or NO_JIKES //FB Object adapter = adapterFactory.adapt(mapping)","non-negative"
"// EATM must fix isSet bits.","non-negative"
"// line comments at the end of annotations are not a part of the range of annotation // TODO is not including line comments at the end of annotations a bug?","non-negative"
"// EATM in JDK 1.4 there will be an indexOf on StringBuffer. //","non-negative"
"//TODO: currently broken for unique-key references (does not detect // change to unique key property of the associated object) //the owner of the association is not the owner of the id","negative"
"//TODO: entities CAN be compared, by PK and entity name, fix this!","negative"
"// TODO: does not work for EntityMode.DOM4J yet!","negative"
"//TODO: would be nice to use false, but issues with MS SQL","non-negative"
"//TODO: not really completely correct, since // the uoe could occur while resolving // associations, leaving the PC in an // inconsistent state","negative"
"//TODO: this is kinda inconsistent with CollectionType","negative"
"// does it matter that this doesn't set the type correctly?","non-negative"
"// Jun 9 2004 12:40 PM // waitFor() hangs on some Java // implementations.","negative"
"// Feb 4 2000 5:30 PM // Catch Throwable here rather than Exception. // Kaffe's implementation of Runtime.exec throws java.lang.InternalError.","non-negative"
"// looks bad with the OS X L&F, apparently...","negative"
"/* two plugins provide same class! */","negative"
"// This really should be Long.decode, but there isn't one. As a result, // hex and octal literals ending in 'l' or 'L' don't work.","negative"
"// TODO: Check this result...","non-negative"
"// TODO: we didn't check the height yet","non-negative"
"// TODO: don't require pop","non-negative"
"// XXX Wrong, but will have to do for now","negative"
"// FIXME: I got a bunch of NPEs when I didn't check for nulls here...HOW?!","negative"
"""/** * Get value from current scope or one of its captured scopes. * * FIXME: block variables are not getting primed to nil so we need to null check those * until we prime them properly. Also add assert back in. * * @param offset zero-indexed value that represents where variable lives * @param depth how many captured scopes down this variable should be set * @return the value here */""","non-negative"
"// SSS FIXME: This doesn't preserve original order of when clauses. We could consider // preserving the order (or maybe not, since we would have to sort the constants first // in any case) for outputing jump tables in certain situations. // // add body to map for emitting later","non-negative"
"// synchronized method per JRUBY-1173 (unsafe Double-Checked Locking) // FIXME: synchronization is still wrong in CP code","negative"
"// vulture thread will periodically expunge dead // entries. entries are also expunged during 'put' // operations; this is designed to cover the case where // many objects are created initially, followed by limited // put activity. // // FIXME: DISABLED (below) pending resolution of finalization issue //","non-negative"
"// zero args with block // FIXME: omit args index","non-negative"
"// TODO: Rubicon TestKernel dies without this line. A cursory glance implies we // falsely set $! to nil and this sets it back to something valid. This should // get fixed at the same time we address bug #1296484.","non-negative"
"// Enebo : Should ~frogger\\foo work (it doesnt in linux ruby)?","negative"
"// FIXME can't use static","non-negative"
"// Bug 2480365: It is very important to get the URI from the URL and not simply do // new File(url.getFile()). In the case where the path contains spaces, they get encoded as %20 in // the string returned from url.getFile(). java.io.File doesn't know how to deal with them // (i.e. replace them with spaces) and the resulting File is rendered non-existent.","non-negative"
"// Cast to int required as Dimension::setSize(double,double) // doesn't appear to do anything in JDK1.2.2.","negative"
"""/* TODO: We should have all the information that is required in the * NotationSettings object */""","non-negative"
"""/** * Parse a transition description line of the form:<pre> * """"event-signature [guard-condition] / action-expression"""". * </pre> * * A """";"""" is not interpreted as having any special meaning. <p> * * The """"event-signature"""" may be one of the 4 * formats:<ul> * <li> ChangeEvent: """"when(condition)"""" * <li> TimeEvent: """"after(duration)"""" * <li> CallEvent: """"a(parameter-list)"""". * <li> SignalEvent: any string without (). * </ul> * * Remark: The UML standard does not make a distinction between * the syntax of a CallEvent and SignalEvent: * both may have parameters between (). * For simplicity and user-friendliness, we chose for this distinction. * If a user wants parameters for a SignalEvent, * then he may add them in the properties panels, but not on the diagram. * <p> * * An alternative solution would be to create a CallEvent by default, * and when editing an existing event, do not change the type.<p> * * TODO: This function fails when the event-signature contains a """"["""" * or a """"/"""". See issue 5983 for other cases that were * a problem in the past. * * @param trans the transition object to which this string applies * @param s the string to be parsed * @return the transition object * @throws ParseException when no matching [] are found */""","non-negative"
"// TODO: This whole block can be deleted when issue 6266 is resolved","non-negative"
"""/** * Rank the nodes depending on their level (position in hierarchy) and set * their weight to achieve a proper node-sequence for the layout. Rows * exceeding the maximum row width are split, if standalone nodes are * available. * <p> * Weight the other nodes to determine their columns. * <p> * TODO: Weighting doesn't appear to be working as intended because multiple * groups of children/specializations get intermixed in name order rather * than being grouped by their parent/generalization. - tfm - 20070314 */""","negative"
"/* * Algorithm* Check for any level one nullability breaks* Look at non null components to*   recursively check next level of nullability breaks* Look at Collections contraining component to*   recursively check next level of nullability breaks*** In the previous implementation, not-null stuffs where checked* filtering by level one only updateable* or insertable columns. So setting a sub component as update=""false""* has no effect on not-null check if the main component had good checkeability* In this implementation, we keep this feature.* However, I never see any documentation mentioning that, but it's for* sure a limitation.*/","negative"
"/* Original note: Jdk under Win is throwing these to warn about lower case / upper case possible mismatch. e.g. bsh.console bsh.Console Update: Prior to 1.3 we were squeltching NoClassDefFoundErrors which was very annoying.  I cannot reproduce the original problem and this was never a valid solution.  If there are legacy VMs that have problems we can include a more specific test for them here.*/","non-negative"
"// 18 nov 2003: calling this on a drive letter on Windows causes // drive access","non-negative"
"// 2 aug 2003: OS/2 Java has a broken getCanonicalPath()","negative"
"""/** * FIXME: * * @author fdietz: No locking of folders currently implemented! * * @author frd */""","negative"
"""/** * TODO: The code implementing this method is from 2003 (see issue 2171) - * mechanically integrated by tfmorris in May 2007. Needs to be * reviewed/updated. * * @author Decki,Endi,Yayan, Politechnic of Bandung. Computer Departement * method for changing text of Message * @param newOwner model element which should now be listened to */""","non-negative"
"// FIXME FACTOR WITH HTTPHC4Impl, HTTPHC3Impl // Just append all the parameter values, and use that as the post body","non-negative"
"""/** * Class to display graphics for a UML SynchState in a diagram. <p> * * TODO: If the font increases, the circle should grow, too. * * @author pepargouml@yahoo.es */""","non-negative"
"// In case this is called by the AWT thread, log a message - this is most likey a bug","negative"
"// TODO : this is broke for subqueries in statements other than selects...","negative"
"// TODO : should this be an error?","non-negative"
"// TODO: figure out how this should be set. /////////////////////////////////////////////////////////////////////////////// // This was the reason for failures regarding INDEX_OP and subclass joins on // theta-join dialects","non-negative"
"// doesn't work: Depending on the compression engine used, // compressed bytes may differ. False errors would be // reported. // assertTrue(""File content mismatch"", // FILE_UTILS.contentEquals(project.resolveFile(""expected/asf-logo-huge.tar.bz2""), // project.resolveFile(""asf-logo-huge.tar.bz2"")));","negative"
"// this is the wrong test if the remote OS is OpenVMS, // but there doesn't seem to be a way to detect it.","negative"
"//TODO add tests for ReportSaveGraphics","non-negative"
"// TODO these assertions should be separate tests","non-negative"
"""/** * Tests if the list with namespaces defined in getValidNamespaceClasses * contains only valid namespaces. * * TODO: This test does not test anything, really! */""","negative"
"// TODO: Test if the generated string is correct.","non-negative"
"/** * Gets the location of an external commandline tool.* <p>* TODO: test this method* * @param toolID*            id of tool* @return location of tool*/","non-negative"
"""/* Listening only to """"remove"""" events does not work... * TODO: Check if this works now with new event pump - tfm */""","non-negative"
"// ?W | boolean | True if file1 exists and is writable by the real uid/gid // FIXME: Need to implement an writable_real_p in FileTest","non-negative"
"// TODO make an assert here","non-negative"
"// FIXME missing full tests for leap year","negative"
"// TODO: This requires that the tests be run with assertions // enabled which isn't guaranteed in all environments.","non-negative"
"//where oh where has my test case 3 gone?","negative"
"""/* TODO: Why does it fail for changing * the name of an associationend? * Why should it pass? */""","non-negative"
"/** * **FIXME** This function needs documentation** Constructor* * @param String*            Name**/","negative"
"/* TODO add javadocs */","non-negative"
"""/** * Generate the """"intno"""" of the given Message. <p> * * If the predecessor of the given message has only one successor, then * we return the string representation of the given integer. <p> * If the predecessor of the given message has more than one successor, then * this is a case of parallel execution of messages, e.g. * Message 3.1a and Message 3.1b are concurrent within activation 3.1. * Hence In this case we use a syntax like: 1a, 1b, 1c. * * This means that the first successor * in the ordered list of successors that has more than one entry * will get the postfix a, the second b, etc. * * TODO: Document exceptional behaviour. * * @param umlMessage the UML message object to generate * the sequence number for * @param umlPredecessor the immediate predecessor message (UML object) * that has the given message as successor * @param position the integer position of the given message * within its sequence * @return the generated sequence expression string, * or null if the given Message was null */""","non-negative"
"// TODO: are we intentionally eating all events? - tfm 20060203 // document!","negative"
"""/** * TODO: Document! * * @deprecated for 0.28 by tfmorris. Use * {@link #UMLActivityDiagram(String, Object, GraphModel)}. */""","negative"
"// TODO check conformancy to specification","non-negative"
"""/** * Set the owners of the associated FigNodes to be the StateVertexes which * are at either end of the Transition. * <p> * TODO: This needs documentation! Is this really needed? Why? * * @param lay diagram layer containing this fig * @param owner owning UML element * @deprecated in 0.28 by Bob Tarling - The above TODO is from Michiel. * I also don't understand the purpose of this method. The GEF framework * should be setting source/dest or persistence should manage. */""","negative"
"// TODO Can't see anything in SPEC","non-negative"
"""/** * Well-formedness rule for Package. Check that the alias for an imported * element doesn't conflict with any existing name. Section 4.14.3.3 of UML 1.4 * spec. * <p> * Other types of name conflicts in a Namespace are checked by * {@link CrNameConflict}. * <p> * TODO: MVW: If an Alias is the same as another class' name, then this critic * fires, but the explanation and wizard are wrong! */""","negative"
"// TODO: Bobs says - what is the purpose of this flag? Please document.","non-negative"
"//TO DO : delete the file if it is not a valid file.","non-negative"
"""/** * This method checks the timestamp on each file listed in the <code> * ejbFiles</code> and compares them to the timestamp on the <code>jarFile * </code>. If the <code>jarFile</code>'s timestamp is more recent than * each EJB file, <code>true</code> is returned. Otherwise, <code>false * </code> is returned. * TODO: find a way to check the manifest-file, that is found by naming convention * * @param ejbFiles Hashtable of EJB classes (and other) files that will be * added to the completed JAR file * @param jarFile JAR file which will contain all of the EJB classes (and * other) files * @return boolean indicating whether or not the <code>jarFile</code> * is up to date */""","non-negative"
"""/** * An output stream that compresses into the BZip2 format (without the file * header chars) into another stream. * <p>The compression requires large amounts of memory. Thus you * should call the {@link #close() close()} method as soon as * possible, to force <tt>CBZip2OutputStream</tt> to release the * allocated memory.</p> * * <p>You can shrink the amount of allocated memory and maybe raise * the compression speed by choosing a lower blocksize, which in turn * may cause a lower compression ratio. You can avoid unnecessary * memory allocation by avoiding using a blocksize which is bigger * than the size of the input. </p> * * <p>You can compute the memory usage for compressing by the * following formula:</p> * <pre> * <code>400k + (9 * blocksize)</code>. * </pre> * * <p>To get the memory required for decompression by {@link * CBZip2InputStream CBZip2InputStream} use</p> * <pre> * <code>65k + (5 * blocksize)</code>. * </pre> * * <table width=""""100%"""" border=""""1""""> * <colgroup> * <col width=""""33%"""" /> * <col width=""""33%"""" /> * <col width=""""33%"""" /> * </colgroup> * <tr> * <th colspan=""""3"""">Memory usage by blocksize</th> * </tr><tr> * <th align=""""right"""">Blocksize</th> * <th align=""""right"""">Compression<br>memory usage</th> * <th align=""""right"""">Decompression<br>memory usage</th> * </tr><tr> * <td align=""""right"""">100k</td> * <td align=""""right"""">1300k</td> * <td align=""""right""""> 565k</td> * </tr><tr> * <td align=""""right"""">200k</td> * <td align=""""right"""">2200k</td> * <td align=""""right"""">1065k</td> * </tr><tr> * <td align=""""right"""">300k</td> * <td align=""""right"""">3100k</td> * <td align=""""right"""">1565k</td> * </tr><tr> * <td align=""""right"""">400k</td> * <td align=""""right"""">4000k</td> * <td align=""""right"""">2065k</td> * </tr><tr> * <td align=""""right"""">500k</td> * <td align=""""right"""">4900k</td> * <td align=""""right"""">2565k</td> * </tr><tr> * <td align=""""right"""">600k</td> * <td align=""""right"""">5800k</td> * <td align=""""right"""">3065k</td> * </tr><tr> * <td align=""""right"""">700k</td> * <td align=""""right"""">6700k</td> * <td align=""""right"""">3565k</td> * </tr><tr> * <td align=""""right"""">800k</td> * <td align=""""right"""">7600k</td> * <td align=""""right"""">4065k</td> * </tr><tr> * <td align=""""right"""">900k</td> * <td align=""""right"""">8500k</td> * <td align=""""right"""">4565k</td> * </tr> * </table> * * <p>For decompression <tt>CBZip2InputStream</tt> allocates less * memory if the bzipped input is smaller than one block.</p> * * <p>Instances of this class are not threadsafe.</p> * * <p> * TODO: Update to BZip2 1.0.1 * </p> * */""","non-negative"
"// TODO support multiple signers","non-negative"
"// TODO: fetch this once as per vars above?","non-negative"
"// TODO: add and delete not currently supported // $NON-NLS-1$","non-negative"
"// TODO should this use setDone()? // TODO should this use setFirst()?","non-negative"
"// not yet handled","non-negative"
"// TODO - should check that error has been logged...","non-negative"
"// TODO: Make this final asap.","non-negative"
"""/** * Compute which critics should be active (i.e., they can be * applied by applyAllCritics) for a given Designer. <p> * * Note: I am setting global data, i.e. the * isEnabled bit in each critic, based on the needs of one designer. * I don't really support more than one Designer. * Which is why each designer * (if we would support more than one designer) * has his own Agency. * * TODO: should loop over simpler list of critics, not CompoundCritics * * @param d the designer */""","non-negative"
"// TODO: Why is this disabled always?","non-negative"
"// TODO: Why is this a special case? - tfm","non-negative"
"""/** * The constructor. * TODO: Why does this method not handle all settings? */""","negative"
"// TODO: Reuse the offender List.","non-negative"
"""/*TODO: In the next line, I should use buildGuard(), * but it doesn't show the guard on the diagram... * Why? (MVW) */""","non-negative"
"// ignored - it shouldn't have been in the project in the 1st place","non-negative"
"// TODO: add recent patterns","non-negative"
"// TODO is it possible to use more than one variable?","non-negative"
"// TODO: Add a button to force garbage collection","non-negative"
"// TODO: Only fetch names and defer fetching panels until needed","non-negative"
"""/** * The drag gesture listener is notified of drag gestures by a recognizer. * The typical response is to initiate a drag by invoking * DragSource.startDrag(). * <p> * * TODO: find a way to show a different image when multiple elements are * dragged. * * @param dragGestureEvent * the DragGestureEvent describing the gesture that has just * occurred * @see java.awt.dnd.DragGestureListener#dragGestureRecognized(java.awt.dnd.DragGestureEvent) */""","non-negative"
"// Don't know what to do otherwise","non-negative"
"""/** * A specialist Selection class for FigPartitions. * This ensures that all swimlanes are the same length (ie height). * TODO: Make sure that all swimlanes appear side by side (UML spec * states """"separated from neighboring swimlanes by vertical solid * lines on both sides"""". * TODO: Allow drag of the west and east edge to resize both the selected * Fig and the fig connected to that side. * TODO: Show NorthWest and SouthWest handle only on leftmost swimlane. * TODO: Show NorthEast and SouthEast handle only on rightmost swimlane. * @author Bob */""","non-negative"
"""/** * Stylepanel which adds a checkbox to show or hide the stereotype.<p> * TODO: i18n. * * @author mvw@tigris.org */""","non-negative"
"// TODO: A more strongly typed data structure could be used here.","non-negative"
"""/** * Utility function to localize the given string with help text, * and show it in the status bar of the ArgoUML window. * This function is used in favour of the inline call * to enable later improvements; e.g. it would be possible to * show a help-balloon. TODO: Work this out. * One matter to possibly improve: show multiple lines. * * @param s the given string to be localized and shown */""","non-negative"
"// TODO: We should assert this never happens before removing // panels should control their own listeners","non-negative"
"// TODO implement me!","negative"
"/** ** create Subject headerfield in using the senders message subject and* prepending ""Fwd:"" if not already there* * @param header*            A <code>ColumbaHeader</code> which contains the headerfields*            of the message we want reply/forward.* * FIXME (@author fdietz): we need to i18n this!* */","negative"
"// TODO finish unmarshalling of all available properties","non-negative"
"// TODO (@author fdietz): add error dialog","non-negative"
"// not needed","negative"
"// TODO: Show dialog","non-negative"
"// I don't know if this should be run this deferred // because we might have to give the editor a chance to process the viewer update events // and hence to update the views first. // //","non-negative"
"// TODO processing instructions are not sent to recordValues","non-negative"
"// TODO comments are not sent to recordValues","non-negative"
"// TODO Ignore for now.","non-negative"
"// TODO translation","non-negative"
"// TODO Binary incompatibility","non-negative"
"//TODO: check that entry.getIdentifier().equals(requestedId)","non-negative"
"// TODO: not visible to the user!","negative"
"//TODO: proxies!","non-negative"
"//TODO: can we limit stored procedures ?!","non-negative"
"//TODO: formulas ?","non-negative"
"// TODO: better error message since we actually support composites if names are explicitly listed.","negative"
"//TODO: use these in methods above","non-negative"
"//TODO: cache the persister, this shows up in yourkit","non-negative"
"//TODO: terrible implementation!","negative"
"// TODO : temporary initial step towards HHH-1907","non-negative"
"// todo : remove this once ComponentMetamodel is complete and merged","non-negative"
"//TODO: maybe call it getRowSelection() ?","non-negative"
"//TODO: include the rowids!!!!","negative"
"// if we are still not resolved, we might represent a constant. // needed to add this here because the allowance of // naked-prop-refs in the grammar collides with the // definition of literals/constants (""nondeterminism""). // TODO: cleanup the grammar so that ""processConstants"" is always just handled from here","negative"
"//TODO check there is no actual definition elemnents when a ref is defined","non-negative"
"// table=null -> an association // - fill it in later //TODO fill in the mappings for table == null","non-negative"
"""/** * An output stream that compresses into the BZip2 format (without the file * header chars) into another stream. TODO: Update to BZip2 1.0.1 * * @author <a href=""""mailto:keiron@aftexsw.com"""">Keiron Liddle</a> */""","non-negative"
"""/** * Parse the XML declaration. * <pre> * [25] XMLDecl ::= '<?xml' VersionInfo EncodingDecl? SDDecl? S? '?>' * [26] VersionInfo ::= S 'version' Eq ('""""1.0""""' | """"'1.0'"""") * [33] SDDecl ::= S 'standalone' Eq """"'"""" ('yes' | 'no') """"'"""" * | S 'standalone' Eq '""""' (""""yes"""" | """"no"""") '""""' * [78] EncodingDecl ::= S 'encoding' Eq QEncoding * </pre> * <p>([80] to [82] are also significant.) * <p>(The <code><?xml</code> and whitespace have already been read.) * <p>TODO: validate value of standalone. * @see #parseTextDecl * @see #checkEncoding */""","non-negative"
"// Need some format checking here","non-negative"
"// Need to calculate this... just fudging here for now.","non-negative"
"// TODO: Also check REG_ANCHORINDEX vs. anchor","non-negative"
"// skip header bytes // maybe should check if they're valid or not?","non-negative"
"// TODO: CLONE_SETUP here","non-negative"
"// TODO: must override in RubyModule to pick up constants","non-negative"
"// TODO: non-strict option","non-negative"
"// TODO: no need to calculate every time.","non-negative"
"// FIXME: create AttrReaderMethod, AttrWriterMethod, for faster attr access","non-negative"
"// TODO: 3 times calculate the same value below","non-negative"
"// SSS: FIXME: Somewhere here, we need to record information the type of this operand as String","non-negative"
"// XXX: Check if it's appropriate type?","non-negative"
"// FIXME: Translate this call below! // s.unwrapPassedBlock()","non-negative"
"/* FIXME: We may be intern'ing more than once.*/","non-negative"
"// filter out any Java primitive names // TODO: should check against all Java reserved names here, not just primitives","non-negative"
"// FIXME: don't use RubyIO for this","non-negative"
"// TODO: we can probably release our references to the constantFields // array and static/instance callback hashes at this point.","non-negative"
"// Do not clone cached methods // FIXME: MRI copies all methods here","non-negative"
"// TODO: check safe, taint on incoming string","non-negative"
"/* TODO: MRI is just a when node. We need this extra logic for IDE consumers (null in casenode statement should be implicit nil)*/","non-negative"
"// TODO: Formalize conversion mechanisms between Java and Ruby","non-negative"
"//FIXME: When we get JNA3 we need to properly write this to errno.","non-negative"
"/* TODO: sort the list. */","non-negative"
"// TODO // Plugin supports only the main session window","non-negative"
"// TODO: allow the user to specify ignore case or preserve case.","non-negative"
"// TODO: When message are can have some text in red (error) // and some normal then put out errors in red.","non-negative"
"// TODO: tell the user that the selected destination schema is // the same as the source schema. // monitor.showMessageDialog(...)","non-negative"
"// TODO: Need to enhance the index dialog to allow specifying storage option. For now just accept the // default for the index access method. // valuesMap.put(""indexType"", ""USING BTREE"");","non-negative"
"// TODO: Put throws clause back in // Empty method.","non-negative"
"// TODO?? ColumnDisplayDefinition should also have the Type (String, Date, // Double,Integer,Boolean)","non-negative"
"// TODO: Need to add storageOptions to the add index dialog // valuesMap.put(ST_STORAGE_OPTION_KEY, );","non-negative"
"// TODO: ask the user if they want to ""undo"" the changes that the // paste made. Alternatively show them the specific problem and // let them fix it. Then allow them to retry the operation, starting // from the point at which the previous operation failed.","non-negative"
"// TODO: put these nil guards into tree (bigger than I want to do right now)","non-negative"
"// FIXME: Should we make this work with platform's locale, // or continue hardcoding US?","non-negative"
"// FIXME: Make bodyNode non-null in parser","non-negative"
"// FIXME: Pass block down?","non-negative"
"// FIXME: draw outliers","non-negative"
"// TODO: I think we need to make sure the keys are actually cloned, // whereas the stroke instances are always immutable so they're OK","non-negative"
"// not implemented","non-negative"
"""/** * Returns a string representing the week (e.g. """"Week 9, 2002""""). * * TODO: look at internationalisation. * * @return A string representing the week. */""","non-negative"
"// FIXME: show a dialog with the error","non-negative"
"""/** * An annotation that allows an image to be placed at some location on * an {@link XYPlot}. * * TODO: implement serialization properly (image is not serializable). */""","negative"
"// todo : cache this sql...","non-negative"
"// TODO: Get Project or other necessary context from source?? // e.getSource()","non-negative"
"// TODO: allow user to request the system or no parent","non-negative"
"//if there was any text before this, add it as a fragment //TODO, this check could be modified to go if pos>prev; //seems like this current version could stick empty strings //into the list","non-negative"
"// XXX add exceptions","non-negative"
"// TODO: Allow other configuration handlers.","non-negative"
"// TODO: implement","non-negative"
"// Allow the mimetype of the file to control the content type // This is not obvious in GUI if you are not uploading any files, // but just sending the content of nameless parameters // TODO: needs a multiple file upload scenerio","non-negative"
"// TODO handle filenames","non-negative"
"// Don't allow override of Content-Length // TODO - what other headers are not allowed?","non-negative"
"// TODO support other name kinds","non-negative"
"// TODO: Allow .zargo as profile as well?","non-negative"
"// TODO: check if it's OK to just get the first zip entry // since the zip file should contain only one xmi file - thn","non-negative"
"// TODO: profile dependencies for UML2","non-negative"
"// TODO support real types","non-negative"
"// XXX: hypotheses no qualifiers (I don't know)","non-negative"
"// TODO check types!","negative"
"// TODO: validate port as numeric","non-negative"
"// TODO same zero-length checks as file above","non-negative"
"// TODO: this code should really check if a Ruby equals method is implemented or not.","non-negative"
"// TODO: Ruby unlocks the string here","non-negative"
"// if not already defined, we add a 'new' that guesses at which signature to use // TODO: just adding first one right now...add in signature-guessing logic","non-negative"
"// TODO: SafeStringValue here","non-negative"
"""/** * Sorts the specified destInfos array based on the order of the sourceInfos * array. Not a very efficient algorthim, but it gets the job done. * TODO: rewrite this using Collections sorting capability. * * @param sourceInfos * @param destInfos * @param sourceTableName * @param destTableName * @return a re-ordered version of the specified destInfos array * @throws MappingException if the arrays differ in length or column names. */""","mixed"
"""/** * A dialect delegate for the Axion database. * TODO: This dialect is not yet complete. Need to provide implementations wherever """"Not yet implemented"""" * appears. */""","non-negative"
"// TODO: Allow the user to specify the sequence name for dialects that don't natively support // auto-increment columns without using sequence/trigger combo.","non-negative"
"// For the Mac ScreenBarMenus to work, this must be declared before // *ANY* AWT / Swing gets initialised. Do *NOT* move it to plugin init // location because that is too late...","non-negative"
"// TODO should class implement SampleListener?","non-negative"
"// TODO: All this profile loading/handling needs to // move someplace in model subsystem probably","non-negative"
"// TODO replace repeated substr() above and below with more efficient method.","negative"
"// HACK: in order to have stdout/err act like ttys and flush always, // we set anything assigned to stdout/stderr to sync","negative"
"/* * Create a TaggedValue with a tag/type matching our source module* filename and a value of the file's last modified timestamp.** TODO: This functionality needs to be moved someplace useful if* it's needed, otherwise it can be deleted. - tfm - 20070217*/","non-negative"
"// TODO: Is this (critics embedded in comments) actually used by anyone?","non-negative"
"// // needed?","non-negative"
"// // We have to deal with assembly!!! // The programmer can be writing little 32 byte chunks for all // we know, and we must assemble complete records for writing. // REVIEW Maybe this should be in TarBuffer? Could that help to // eliminate some of the buffer copying. //","negative"
"/** * Models the designers goals in making this design. Provides useful* control information to the Agency so that only critics relevant to* the designers goals are ever executed.** TODO: Really this should be part of a domain extension* and not the kernel. I have not developed this part of Argo very* much.* * @author Jason Robbins*/","non-negative"
"// needed?","non-negative"
"// what to do here? we could start a new server...","non-negative"
"/** _x0001_ * this regular expression should cover anything from a@a.pt or a@a.com to_x0001_ * a@a.info. Permits usage of invalid top domains though._x0001_ * <p>_x0001_ * [bug] fdietz: added ""."" and ""-"" as regular characters_x0001_ * (example:mail@toplevel.mail.de)_x0001_ * <p>_x0001_ * TODO: see if we can replace the matching code with Ristretto stuff_x0001_ *_x0001_ */","non-negative"
"/** * Create an empty but initialized instance of a UML Method.** @return an initialized UML Method instance.* TODO: This needs an extra parameter to specify the model/extent where* the new element should be created.*/","non-negative"
"//kinda ugly, but needed for collections with a ""."" node mapping","mixed"
"// TODO: process warnings? Set Code and Message to success?","non-negative"
"/** * A wizard which adjust the threshold for critics. <p>** TODO: Make the treshold setting adjustable without using the wizard,* and make it persistent. * Maybe by using the ""Configure"" button on the Browse Critics dialog.** @see org.argouml.uml.cognitive.critics.AbstractCrTooMany* @author mkl* */","non-negative"
"// Unused?","non-negative"
"// clear name resolvers... don't know if this is necessary.","non-negative"
"/** * Check if a string is a valid JMeter 'expression'.* <p>* The current implementation is very basic: it just accepts any string * containing ""${"" as a valid expression. TODO: improve, but keep returning* true for ""${}"".*/","non-negative"
"// TODO: implement this properly","negative"
"// todo : remove","non-negative"
"// TODO: this assumes ranges are sorted. Is this true? - tfm","non-negative"
"// unused in parent","non-negative"
"// bingo append it. (this should normally not be done here)","negative"
"// TODO: protected methods. this is going to require a rework of some of the mechanism.","non-negative"
"// If is a classifier role, it must return the received messages. // In other cases, returns an empty list. // TODO: Must be the outgoing messages or the received ones?","non-negative"
"// TODO: In UML2.x Event has no parameters. The Event metaclass in // UML1.x corresponds to the Trigger metaclass in UML2.x (see UML // Superstructure page 456).","non-negative"
"//DMS Why not this? //new SubProgressMonitor(progressMonitor, 1));","non-negative"
"/* * Constraint: This code only deals with 1 supplier per dependency!* TODO: Do we need more?* * @see org.argouml.uml.ui.AbstractActionAddModelElement#doIt(java.util.List)*/","negative"
"/* * XXX - failed to load the class properly.** should we print a warning here?*/","negative"
"// TODO: This can't depend on ProjectBrowser. Alternate below","negative"
"// TODO: get SQL rendering out of here, create an AST for the join expressions. // Use the SQL generator grammar to generate the SQL text for the index expression.","non-negative"
"// TODO - should we skip processing here?","non-negative"
"/** * Sets the language of an expression.** TODO: This operation is fooling the user* in thinking that the body of the object is changed.* Instead, a new object is created.* There is no other way: a MExpression can not be altered,* once created!* So, this operation returns a newly created object instead.** @param handle The expression.* @param language The new language.* @return The newly created Object.*/","negative"
"/** * XmiWriter implementation for MDR.** This implementation is clumsy because the specified Writer interface wants* characters, while the XmiWriter wants an OutputStream dealing in bytes. We* could easily create a Writer from an OutputStream, but the reverse is not* true.** TODO: The old Writer based interface can be removed when the deprecated* ModelImplementation.getXmiWriter is removed.** @author lmaitre**/","negative"
"//this is the temporary solution for issue 1011","negative"
"// XXX could perhaps also call thread.stop()","non-negative"
"// TODO: this must be wrong...","negative"
"// TODO: callback for value would be more efficient, but unlikely to be a big cost (constants are rarely assigned)","non-negative"
"// Hack to get full modifier value","negative"
"/* * The following variables are set by StandardJMeterEngine.* This is done before start() is called, so the values will be published to the thread safely* TODO - consider passing them to the constructor, so that they can be made final* (to avoid adding lots of parameters, perhaps have a parameter wrapper object.*/","non-negative"
"/* * TODO: Work in progress here to allow multiple details panes with* different contents - Bob Tarling*/","non-negative"
"// TODO - why use space?","non-negative"
"// TODO (@author karlpeder): Extend handling of special entities as in restoreSpecialCharacters","non-negative"
"/* * Setting SamplingStarted before the contollers are initialised allows* them to access the running values of functions and variables (however* it does not seem to help with the listeners)*/","non-negative"
"// This is effectively the same as saver.toXML(Object, Writer) except we get to provide the DataHolder // Don't know why there is no method for this in the XStream class","non-negative"
"/** * Prefix identified as an implementation specific class.* TODO: This should be generalized so it doesn't have to be changed* each time a new implementation is created - tfm 20051109*/","non-negative"
"// Don't allow connections to be created from a read only // model element to any other // TODO: This should be considered a workaround. It only works // because, by default, we place newly created relationships in // the namespace of the fromElement. The correct behavior in // the presence of read-only elements really depends on the type of // connection as well as the writeability of both ends.","negative"
"// brand new collection //TODO: or an array!! we can't lock objects with arrays now??","non-negative"
"// TODO // I'm concerned that folders will often return 401 or even 403. // So should we consider something to exist even though access if unauthorized or forbidden? //","negative"
"// Parse pattern into tokens. Does anyone know if it's more efficient // to use char[] than a String.charAt()? I'm assuming so.","non-negative"
"// FIXME: There's some code duplication here with RubyObject#inspect","non-negative"
"/** * Find the Icon for a given model element.** @return The Icon or <code>null</code> if there is no Icon.* @param value The model element.** TODO: This should not use string matching on classnames to do this* since this means that we have knowledge about how the model* elements are implemented outside of the Model component.*/","non-negative"
"/////////////////////////////////////////////////////////////////////////// // USED ONLY FOR REGRESSION TESTING!!!! // // todo : obviously get rid of all this junk","negative"
"/** * Provides query splitting methods, which were originally in QueryTranslator.* <br>* TODO: This will need to be refactored at some point.** @author josh*/","negative"
"/** * Searches for a type/classifier with name s. If the type is not found, a* new type is created and added to the current namespace.* <p>* TODO: Move to Model subsystem - tfm 20070307* * @param s* the name of the type/classifier to be found* @return Classifier*/","non-negative"
"/*_x0001__x0001__x0001__x0001_ * END-KLUDGE_x0001__x0001__x0001__x0001_*/","negative"
"// TODO: the namespace of created events is currently the model. // I think this is wrong, they should be // in the namespace of the activitygraph! // vec.addAll( // Model.getModelManagementHelper().getAllModelElementsOfKind( // Model.getFacade().getNamespace(getTarget()), // Model.getMetaTypes().getEvent()));","negative"
"//TODO: used to be exprNoParens! was this needed?","negative"
"// FIXME: not very efficient","negative"
"// SSS FIXME: I added this in. Is this correct?","non-negative"
"// The call here is the result of a desperate fight // to find a place where the components in the split // had not height = 0. If someone knows a better way // please tell me I'll apreciate any advice. // gerdwagner@users.sourceforge.net","negative"
"// FIXME: No getValueFormat() method?","non-negative"
"// Some dbs (like McKoi) make -1 the default for scale. Apply the // same hack as above.","negative"
"// ugly workaround","negative"
"// FIXME: Can get optimized for IEqlNode","non-negative"
"// get the right object from the list ... would it be easier to just call getEntity() ??","non-negative"
"// TODO: Move to GEF","non-negative"
"// TODO: use a generator here","non-negative"
"//TODO: Return content type according to the mime part in the mail","non-negative"
"// index for the item // this could probably be more efficient, bailing out on assigning args past the end?","non-negative"
"// Maybe we should consider creating a global cache for the // random files to make JMeter more efficient.","non-negative"
"// Can we use the proxy mechanism to cast a bsh.This to // the correct interface?","non-negative"
"// hack... sticking to first interpreter that resolves this // see comments on type instance variable","negative"
"//FIXME: get the PersistentClass","non-negative"
"// worrying about proxies is perhaps a little bit of overkill here...","negative"
"/** * TODO: The reference to the method* org.argouml.uml.ui.VetoablePropertyChange#getVetoMessage(String)* was here but the class does exist anymore. Where is it?* This method is never used!** @param propertyName is the name of the property* @return a message or null if not applicable.*/","negative"
"// This is a work-around for what looks like a bug to me - it is a syntax error to qualify with the // schema the new table name, but not the old as in: // // ALTER TABLE ""public"".""tablerenametest"" RENAME TO ""public"".""tablewasrenamed"" // // The second ""public"". is apparently not (currently) a valid thing to do.","negative"
"// Get the content length, it tells us how much data to read // TODO : Maybe support chunked encoding, then we cannot rely on content length","non-negative"
"// N.B. Commons IO IOUtils has equivalent methods","non-negative"
"// TODO: These were missing, so we're not handling them elsewhere?","negative"
"// If it's a single-arg when but contains an array, we know it's a real literal array // FIXME: This is a gross way to figure it out; parser help similar to yield argument passing (expandArguments) would be better","negative"
"// Create our bandbuffer which is just a small slice of the image // TODO: We used a fixed height buffer now, but we could be smarter and // compute a height which would fit in some memory budget, allowing us // to use taller buffers with narrower images, minimizing the overhead // of multiple rendering passes","non-negative"
"// TODO: This can be a mess... There are any better solution?","negative"
"// TODO: Temporary stopgap for EnumerationLiteral","negative"
"//TODO: Open in message frame //TODO: Handle also message attachments from OpenInComposer action","non-negative"
"// stupidity","negative"
"// defer argument checking","non-negative"
"// FIXME: ConstDecl could be two seperate classes (or done differently since constNode and name // never exist at the same time.","non-negative"
"/** * ActionAddExistingNode enables pasting of an existing node into a Diagram.** @author Eugenio Alvarez* Data Access Technologies.* TODO: Why do we have this class as well as ActionAddExistingNodes?*/","non-negative"
"// not used","non-negative"
"// stupid scrollbar policy is an attempt to work around // bugs people have been seeing with IBM's JDK -- 7 Sep 2000","negative"
"// TODO: Reconfigure exception handling to distinguish between errors // that are possible due to bad input data and those that represent // unexpected processing errors.","non-negative"
"/* * TODO: We could also support other flavors here,* e.g. image (then you can drag modelelements directly into* your wordprocessor, to be inserted as an image).*/","non-negative"
"// if we get here, we found a matching method, use it // TODO: choose narrowest method by continuing to search","non-negative"
"/* TODO create exception for this */","non-negative"
"// TODO @author hubms have this flags, until the speed of the entitymanager // is improved","non-negative"
"// TODO: Does CoreHelper#getExtendingClassifiers(Object element) means // all direct and indirect extending classifiers or only the direct // extending classifiers?","non-negative"
"// TODO Probably want to allow the user to set these sequence properties ?? // Sequence settings.","non-negative"
"/* MVW: for this case, I have to move the* call to setSelectedItem() outside the ""buildingModel"", otherwise* the combo does not update with the new selection.* The same does probably apply to the cases above! */","negative"
"// TODO - should the encoding be configurable? // $NON-NLS-1$","non-negative"
"// TODO: Must we calculate the whole list?","negative"
"// XXX what is this for?","non-negative"
"// TODO: the type of the model element used in a type parameter // (ie the formal) needs to match the actual parameter that it // gets replaced with later. This code is going to restrict that // to always being a Parameter which doesn't seem right, but I // don't have time to debug it right now. - tfm - 20090608","non-negative"
"/** * This class represents a Pool of Swimlanes for Activity diagrams. This is* exists only to act as the GEF style encloser. Other nodes in the same* must be placed entirely within or outside the boundaries of this Fig* but cannot intersect with the boundary. <p>* TODO: There is no actual model element being represented here so we are* inheriting a lot of behaviour from FigNodeModelElement that we don't want.* We require to split FigNodeModelElement to separate the code that requires* a model element owner. See issue ... <p>* Remark mvw: Why not give it an owner instead? The ActivityGraph * is the obvious candidate, or maybe the top state.* * @author mkl*/","non-negative"
"// todo : we can remove this once the deprecated ctor can be made private...","non-negative"
"// TODO: This needs to use a different method than that used by the // constructor if it wants to allow the method to be overridden","non-negative"
"/** * Create an empty but initialized instance of a UML Operation.** @return an initialized UML Operation instance.* TODO: This needs an extra parameter to specify the model/extent where* the new element should be created.*/","non-negative"
"// work around that crazy issue where the tree contains // ""empty"" FromElements (no text); afaict, this is caused // by FromElementFactory.createCollectionJoin()","mixed"
"/** * A Command uses the information provided from {@link DefaultCommandReference}* to execute itself.* <p>* TODO: remove IFrameMediator dependency* * @author Timo Stich <tstich@users.sourceforge.net>*/","non-negative"
"//Maybe do nothing at all?","non-negative"
"// TODO: Can we move this knowledge behind model facade rather than have a condition here?","non-negative"
"/** * This class models the designer who is building a complex design in* some application domain and needs continuous feedback to aid in the* making of good design decisions.<p>** <strong>This area needs work, especially as it is a* central idea of Argo.</strong><p>** Currently (almost) everything is hardcoded. What can be configurable??<p>** The ToDoList is dependent on this class,* i.e. each designer has its ToDoList.<p>** Each designer has his own Agency,* which is the only class that knows all the critics.<p>** This class listens to property changes from ...?<p>** A designer can create ToDo Items, just like the critics. Hence the designer* implements the Poster interface.<p>** TODO: There is a strong dependency cycle between Agency and Designer. They* either need to be merged into a single class or partitioned differently,* perhaps using an interface to break the cycle. The Designer singleton gets* passed to almost every single part of the Critic subsystem, creating strong* coupling throughout. - tfm 20070620** @author Jason Robbins*/","negative"
"// TODO: This method can be replaced by getClass().getSimpleName() // when Argo drops support for Java versions < 1.5","non-negative"
"// TODO: Should this really return null? If not, figure out something better to do here.","negative"
"// TODO: AddOnly has been removed in UML 2.x, so we should phase out // support of it - tfm - 20070529","non-negative"
"//hence a less elegant workaround that works:","mixed"
"// and its stereotypes // TODO: Aren't stereotypes handled elsewhere?","non-negative"
"// No appropriate DataType for this column, so do the best // we can with what we know. // // THIS MAY NOT BE THE BEST BEHAVIOR HERE!!!!!!!","negative"
"/* * Wrapper to convert a JUnit4 class into a TestCase** TODO - work out how to convert JUnit4 assertions so they are treated as failures rather than errors*/","non-negative"
"/** * Loads the project file and opens all kinds of error message windows* if it doesn't work for some reason. In those cases it preserves* the old project.** @param file the file to open.* @param showUI true if an error message may be shown to the user,* false if run in commandline mode* @param pmw _x0001_the ProgressMonitor to be updated;* _x0001__x0001__x0001__x0001_if not needed, use null* @return project the project that was created based on the file that was* successfully opened** TODO: Separate this into a Swing specific class - tfm*/","non-negative"
"/** * An array of valid connections, the combination of connecting class and* node classes must exist as a row in this list to be considered valid.* <ul>* <li>The 1st column is the connecting element.* <li>The 2nd column is the ""from"" element type.* <li>The 3rd column is the ""to"" element type.* The 3rd column is optional, if not given then it is assumed to be* the same as the ""from"" element.* <li>The existence of a 4th column indicates that the connection is valid* in one direction only.* </ul>* TODO: This encodes not only what is legal in UML, but also what ArgoUML* knows how to create, so not all legal connections are included. Probably* should be split into two pieces: 1) legal UML (here) and 2) supported (in* ArgoUML application someplace) - tfm - 20060325<p>* See also issue 3863.<p>** Most of these are subtypes of Relationship which includes Association,* Dependency, Flow, Generalization, Extend, and Include. Dependency* includes Binding, Abstraction, Usage, and Permission. AssociationRole and* AssociationClass are Associations. The remaining items (Link, Transition,* AssociationEnd, Message) are non-Relationship types which ArgoUML treats* as connections/edges.*/","non-negative"
"// optional args, so we have IRubyObject[] // TODO: confirm","non-negative"
"// TODO: This code is cloned over and over again! - tfm","negative"
"// References to actions that we need for Mac hack","non-negative"
"// These may not actually make any difference at present (the code // behind addTrigger needs more work).","non-negative"
"// Windows JDK workaround","negative"
"// TODO: decompose getJavaPackageModule so we don't parse fullName","non-negative"
"// FIXME: This is currently only here because of some problems with IOOutputStream writing to a ""bare"" runtime without a proper scope","non-negative"
"/** * Builds an interface with a given name.** @param name is the given name.* @return Interface* TODO: This needs an extra parameter to specify the model/extent where* the new element should be created.*/","non-negative"
"// is it necessary to register %exact since it can only appear in a where clause?","non-negative"
"//this is really irritating","negative"
"//need to do that here rather than in the save event listener to let //the post insert events to have a id-filled entity when IDENTITY is used (EJB3)","non-negative"
"// TODO: // Move to MMUtil or some other common place and merge with // UMLComboBoxEntry::findNamespace()","non-negative"
"// TODO: For JFreeChart 1.2.0, this method should go in the // ShapeUtilities class","non-negative"
"// Don't allow override of Content-Length // This helps with SoapSampler hack too // TODO - what other headers are not allowed?","non-negative"
"// TODO: This first loop just to count the items appears // redundant to me - tfm 20070630","negative"
"// really there are two situations where it should be ok to allow the insertion // into properties defined on a superclass: // 1) union-subclass with an abstract root entity // 2) discrim-subclass // // #1 is handled already because of the fact that // UnionSubclassPersister alreay always returns 0 // for this call... // // we may want to disallow it for discrim-subclass just for // consistency-sake (currently does not work anyway)...","non-negative"
"// Allow JMeter to render frames (and relative images) // Must be done after setContentType [Why?]","non-negative"
"// provide public visibility","non-negative"
"// TODO: This is almost RubyModule#instance_methods on the metaClass. Perhaps refactor.","non-negative"
"// N.B. Needs to implement Visualizer so that TestBeanGUI can find the correct GUI class // TODO - remove UnsharedComponent ? Probably does not make sense for a TestBean.","negative"
"// TODO: We definitely don't want to react to addition and // removal of transitions. Can't we be more specific when // we register ourselves as a listener.","negative"
"// TODO: This should listen for new target events // fired by WizStep.updateTabToDo so that we // can decouple it from the ProjectBrowser.","non-negative"
"//ie. the subquery! yuck!","negative"
"// What is the property supposed to be?","non-negative"
"// TODO: Model implementation independent","non-negative"
"//TODO: ugly here:","negative"
"/*_x0001_Note: This class essentially just delegates most of its methods to its_x0001_parent. The setVariable() indirection is very small. We could probably_x0001_fold this functionality back into the base NameSpace as a special case._x0001_But this has changed a few times so I'd like to leave this abstraction for_x0001_now.*/","non-negative"
"// FIXME: I don't like this","negative"
"//TODO: ary_sort_check should be done here","non-negative"
"//TODO: make EntityPersister *not* depend on SessionFactoryImplementor //interface, if possible","non-negative"
"// TODO should this be deprecated ? (to be efficient, internals should deal with RubyHash directly)","negative"
"// TODO: Do we need this one. */","non-negative"
"// TODO: Without the null check the following throws a NPE so many // times when it is called from FigEdgeModelElement.modelChanged(), // we need to think about it.","non-negative"
"// TODO: Do we need to set the input encoding here? It was // done for ToDo parsing, but none of the other member types // InputSource inputSource = new InputSource( // new InputStreamReader(inputStream, Argo // .getEncoding()));","non-negative"
"// something is very wrong here","negative"
"// FIXME: This is pretty gross; we should have a cleaner initialization // that doesn't depend on package-visible fields and ideally is atomic, // probably using an immutable structure we replace all at once. // lazy, null when no groups defined","negative"
"// all the others could be private too?","non-negative"
"//TODO: should orphans really be deleted during lock???","negative"
"//TODO: this is temporary in that the end result will probably not take a Property reference per-se.","non-negative"
"/* FIXME: Resolve what the hell is going on*/","negative"
"// TODO: Using just the last piece of the ID leaves the potential for // name collisions if two linked files have the same name in different // directories","non-negative"
"// TODO : what amount of significant digits need to be supported here? // - from the DecimalFormat docs: // [significant digits] = [minimum integer digits] + [maximum fraction digits]","non-negative"
"// JASON: Do we need these?","non-negative"
"// turn of focus stealing (workaround should be removed in the // future!)","negative"
"//TODO: suck this into initLaziness!","negative"
"// TODO: Only setAccessible to account for pattern found by // accessing constants included from a non-public interface. // (aka java.util.zip.ZipConstants being implemented by many // classes) // TODO: not sure we need this at all, since we only expose // public fields. //field.setAccessible(true);","non-negative"
"/** * A window that displays an exception to the user if we can't handle it* in any other way.* * TODO: This has been partly converted to be a generic error dialog * rather than something specific to exceptions. This should be renamed* when that process is complete.*/","non-negative"
"/*TODO before inserting, find out if there's already a menu item* with the same action command. if so, replace it, otherwise insert new*/","non-negative"
"/** Mask values for TEST_TYPE TODO: remove either MATCH or CONTAINS - they* are mutually exckusive*/","non-negative"
"// none of the others are ever meant to be // removed. retarded, eh? this needs to be // fixed eventually, for plugins might // want to do weird stuff to jEdit's UI","negative"
"/** TODO: Spring-inject when this class is a Spring bean */","non-negative"
"//TODO: bad implementation, cos it depends upon ordering of mapping doc // fixing this requires that Collection/PersistentClass gain access // to the Mappings reference from Configuration (or the filterDefinitions // map directly) sometime during Configuration.buildSessionFactory // (after all the types/filter-defs are known and before building // persisters).","negative"
"// TODO - yet another ambiguous name - does it need changing? // See also: Clearable, JMeterGUIComponent","negative"
"// this is retarded. excuse me while I drool // and make stupid noises","negative"
"//TODO: split into an inherited attr critic and a local //attr critic","non-negative"
"// TODO: Bob says - tabs that listen for target changes // should register themselves not expect DetailsPane to // listen and pass on the event. Otherwise these tabs // always rely on DetailsPane. TabToDoTarget and TabProps // currently listen directly.","non-negative"
"/* Silly bug workaround #8694. If you look at the above code,_x0001__x0001_ * note that we restore the saved caret position first, then_x0001__x0001_ * scroll to the saved location. However, the caret changing_x0001__x0001_ * can itself result in scrolling to a different location than_x0001__x0001_ * what was saved; and since moveCaretPosition() calls_x0001__x0001_ * updateBracketHighlight(), the bracket highlight's out of_x0001__x0001_ * bounds calculation will rely on a different set of physical_x0001__x0001_ * first/last lines than what we will end up with eventually._x0001__x0001_ * Instead of confusing the user with status messages that_x0001__x0001_ * appear at random when switching buffers, we simply hide the_x0001__x0001_ * message altogether. */","negative"
"/**_x0001_ * TODO: mvw: Would it not be better if this code_x0001_ * would go in startTextEditor(), not overruling mouseClicked()._x0001_ * But we made this fig not editable,_x0001_ * to stop it from reacting on key-presses._x0001_ * Anyhow - this is a hack - abusing a FigText - GEF does_x0001_ * not really support double-clicking on a Fig to trigger some action._x0001_*/","negative"
"// todo : potentially look at optimizing these two arrays","non-negative"
"//TODO: is this really necessary????","negative"
"// Yow...this is still ugly","negative"
"// null or brand new collection // this will also (inefficiently) handle arrays, which have // no snapshot, so we can't do any better","negative"
"/** * @see org.argouml.cognitive.Critic#setHeadline(java.lang.String)** Set up the locale specific text for the critic headline* (the one liner that appears in the to-do pane)* and the critic description (the detailed explanation that* appears in the to-do tab of the details pane).** MVW: Maybe we can make it part of the constructor CrUML()?** FIXME: why override if nobody uses?*/","negative"
"// // @author: fdietz // using shutdown-manager is wrong here, because this // automatically also calls the FrameManager, which // also starts a second shutdown thread // -> This leads into two parallel shutdown thread which // -> is why sometimes config-files, etc. get messed up //","negative"
"// This is a kludge to deal with enumerators, which crash the doSwitch. //","negative"
"// TODO: Do we want to <<friend>> stereotypes too? // || Model.getExtensionMechanismsHelper().hasStereotype( // permission, ModelManagementHelper.FRIEND_STEREOTYPE)","non-negative"
"// I guess this can happen as a result of a bad // file read? In this case, it would be better to replace the // incorrect value with anything valid, e.g. the default value // for the property. // But for the time being, I just prefer to be aware of any // problems occuring here, most likely programming errors, // so I'll bail out. // (MS Note) Can't bail out - newly create elements have blank // values and must get the defaults. // Also, when loading previous versions of jmeter test scripts, // some values // may not be right, and should get default values - MS // TODO: review this and possibly change to:","negative"
"//TODO: implement caching?! proxies?!","non-negative"
"/** * Updates a compartment box. Called from updateLayout if there is* a model event effecting the attributes/operations and from* renderingChanged in all cases.* TODO: The above statement means that the entire contents of the* compartments are being rebuilt whenever an add/remove* of an attribute, operation or a reception is detected. It would be* better to have compartments listen for add and remove events* and make minimum change rather than entirely rebuild. * Remark MVW: This is a bit exaggerated, since the populate() * method is already heavily optimized.*/","negative"
"// Only do verification if debug level logging is on // TODO: Should we leave this on always? - tfm","non-negative"
"/* If the jarfile already exists then whack it and recreate it.* Should probably think of a more elegant way to handle this* so that in case of errors we don't leave people worse off* than when we started =)*/","negative"
"// ruby constants for strings (should this be moved somewhere else?)","non-negative"
"// Does not appear to be used yet","non-negative"
"// TODO is this the best way to do this?","non-negative"
"// JASON: Make menu smarter. When second window for the same // session is added create a hierarchical menu for all windows // for the session.","non-negative"
"/** * Builds a method with a given name.** @param name is the given name* @return method* TODO: This needs an extra parameter to specify the model/extent where* the new element should be created.*/","non-negative"
"/* FIXME: lose syntactical elements here (and others like this)*/","non-negative"
"// TODO is this really necessary?","non-negative"
"// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415","non-negative"
"// TODO: Remove the casting to DiagramFactoryInterface2 // as soon as DiagramFactoryInterface is removed.","non-negative"
"// TODO : not sure the best way to handle this. // The non-performant way :","non-negative"
"// Does not appear to be used","non-negative"
"// clone will produce correct type // TODO but why do we need to clone the list?","non-negative"
"// Strip off drive letters! // REVIEW Would a better check be ""(File.separator == '\')""?","non-negative"
"/** * forwards this event to the tree model.** @param element the modelelement to be added** TODO: This shouldn't be public. Components desiring to* inform the Explorer of changes should send events.*/","non-negative"
"// TODO fix up for Nimbus LAF","non-negative"
"// hack/workaround as sqlquery impl depend on having a key.","negative"
"//TODO: Return content encoding according to the mime part in the mail","non-negative"
"/** * A command to set selected figs to their minimum size. <p>* Despite its name, really the minimum size is selected here! <p>* * TODO: Rename this class.** @author Markus Klink*/","non-negative"
"//??? For now, use the same renderer as everyone else. //?? //?? IN FUTURE: change this to use a new instance of renederer //?? for this data type.","non-negative"
"//TODO: better to degrade to lazy=""false"" if uninstrumented","non-negative"
"/** * forwards this event to the tree model.** @param element the modelelement to be changed** TODO: This shouldn't be public. Components desiring to* inform the Explorer of changes should send events.*/","non-negative"
"// TODO: BooleanExpresion is removed from UML2.x, is it OK to use // ValueSpecification?","non-negative"
"// Put a placeholder in entries, so we don't recurse back and try to save() the // same object again. QUESTION: should this be done before onSave() is called? // likewise, should it be done before onUpdate()?","non-negative"
"// TODO specify collection type without breaking callers","non-negative"
"// TODO: Is there an option we can use to save our ArgoUML version?","non-negative"
"/* workaround for hang if match was_x0001__x0001__x0001__x0001__x0001_ * zero-width. not sure if there is_x0001__x0001__x0001__x0001__x0001_ * a better way to handle this */","negative"
"//TODO: this is too conservative; if all preceding joins were // also inner joins, we could use an inner join here","non-negative"
"// fucking GTK look and feel","negative"
"// TODO not read, yet in a public setter","non-negative"
"// TODO - should we call start() and stop()?","non-negative"
"// FIXME: If NativeException is expected to be used from Ruby code, it should provide // a real allocator to be used. Otherwise Class.new will fail, as will marshalling. JRUBY-415","negative"
"//?? Split these 4 functions off into a subclass of BaseFavouriteAction","non-negative"
"// XXX: This check previously used callMethod(""=="") to check for equality between classes // when scanning the hierarchy. However the == check may be safe; we should only ever have // one instance bound to a given type/constant. If it's found to be unsafe, examine ways // to avoid the == call.","non-negative"
"// todo : throw exception?","non-negative"
"/** * Reply a Set of design material's that are the subject of this ToDoItem.** @return the offenders* TODO: Offenders need to be more strongly typed. - tfm 20070630*/","non-negative"
"//TODO: make the explorer listen to project member property //changes... to eliminate coupling on gui.","non-negative"
"// TODO improve the error handling","non-negative"
"/** * Flag to indicate if we are the main application* or being integrated in another top level application such* as Eclipse (via the ArgoEclipse plugin).* TODO: This is a temporary measure until ProjectBrowser* can be refactored more appropriately. - tfm*/","negative"
"// todo : add the notion of enabled filters to the CacheKey to differentiate filtered collections from non-filtered","non-negative"
"/** * Create an empty but initialized instance of a UML Permission.** @return an initialized UML Permission instance.* TODO: This needs an extra parameter to specify the model/extent where* the new element should be created.* @deprecated for 0.27.3 by tfmorris. Renamed in UML 2.x to PackageImport.* Use {@link #createPackageImport()}.*/","non-negative"
"/* _x0001__x0001_Note: we need a form of eval that passes the callstack through..._x0001_*/","non-negative"
"/** * The Fig for a permission, which is a form of dependency.* <p>* TODO: In UML 2.x, the import and access Permissions have become* PackageImports with public visibility and non-public visibility respectively.* (ArgoUML only supports the <<import>> Permission currently). The friend* Permission has been dropped. Also the type hierarchy has been reorganized so* that PackageImport is not a subtype of Dependency.* * @author Markus Klink*/","non-negative"
"// TODO: This creates a dependency on the Critics subsystem. // We need a generic way for modules (including our internal // subsystems) to request addition of actions to the popup // menu. - tfm 20080430","non-negative"
"/*_x0001__x0001_Notes:_x0001__x0001_This is broken. It finds public but less specific methods over_x0001__x0001_non-public but more specific ones._x0001__x0001_findMostSpecficMethod() needs to be rewritten to eliminate _x0001__x0001_findAccessibleMethod. We should implement the findMostSpecificMethod _x0001__x0001_that uses the publicOnly flag. FindMostSpecificMethod should also_x0001__x0001_operate in two passes to give standard Java assignable matches priority_x0001__x0001_over extended bsh type matches._x0001_*/","negative"
"// TODO: Bob says - we should not be listening here for // addition and removal of attributes. This should be done in // FigAttributesCompartment.","non-negative"
"// FIXME: the renderer interface doesn't have the drawDomainLine() // method, so we have to rely on the renderer being a subclass of // AbstractXYItemRenderer (which is lame)","negative"
"// FIXME: Clearing read buffer here...is this appropriate?","non-negative"
"// Don't implement - deprecated method in interface.","non-negative"
"// TODO: Why do we need this as well as control? Why is it // instantiated when its not always needed.","negative"
"// Remember to change this when the class changes ...","non-negative"
"//We should actually rework this class to not implement Parser //and just process path expressions in the most convenient way.","non-negative"
"// TODO: This logic may well be worth moving into the model component. // Provide a similar grid to the connectionsGrid","non-negative"
"/*_x0001__x0001__x0001__x0001__x0001_ * TODO: Find out why_x0001__x0001__x0001__x0001__x0001_ * KLUDGE: For some reason, I am not able to get the sheet to_x0001__x0001__x0001__x0001__x0001_ * size correctly. It always displays with a size that causes_x0001__x0001__x0001__x0001__x0001_ * the sub-panels to have their scrollbars showing. Add a bit_x0001__x0001__x0001__x0001__x0001_ * of an increase in the size of the panel so thescrollbars_x0001__x0001__x0001__x0001__x0001_ * are not displayed._x0001__x0001__x0001__x0001__x0001_ */","negative"
"//This is not very nice (and quite slow):","negative"
"//TODO: simply remove this override // if we fix the above todos","non-negative"
"/* TODO should come up with a better name for the menu item */","non-negative"
"// EATM This might be better written as a single loop for the EObject case? //","non-negative"
"// We assume, that every output, jikes does, stands for an error/warning // XXX // Is this correct?","non-negative"
"// should header be saved with the data? //$NON-NLS-1$","non-negative"
"// hack to ensure the newly created swt fonts will be rendered with the // same height as the awt one","negative"
"//TODO: reenable if we also fix the above todo","non-negative"
"// all of the following have been converted to use the DataType objects // So, why not just have case Types.NULL and default??? (this seems pointless) // RMM 20070726","negative"
"// for DOM4J ""collections"" only // TODO: it would be better if this was done at the higher level by Printer","non-negative"
"/** * The constructor.* TODO: The ""name"" parameter is used for the icon and for the tooltip.* This makes i18n of the tooltip impossible.** @param modeClass the next global editor mode* @param arg the name of a new argument for the new mode* @param value the value of a new argument for the new mode* @param name the name of the command that is the tooltip text.*/","negative"
"// report this?","non-negative"
"// AHA! // this is probably the only way to fix this","non-negative"
"// TODO - is this the correct default?","non-negative"
"// TODO: Performance critical method","non-negative"
"// TODO: It's perhaps just a coincidence that all the channels for // which we should raise are instanceof SelectableChannel, since // stdio is not...so this bothers me slightly. -CON","negative"
"// TODO: Move to Diagram subsystem?","non-negative"
"// TODO: handle writing into original buffer better","non-negative"
"// TODO: protected methods. this is going to require a rework // of some of the mechanism.","non-negative"
"// TODO: better error handling","non-negative"
"// TODO : not sure this is correct, could not find docs on how to do this.","negative"
"// TODO: implement the entity for the annotation","non-negative"
"//before cascade! //TODO: should this be Session.instantiate(Persister, ...)?","non-negative"
"//DMS should we let this exception out?","non-negative"
"// TODO: Distinguish between deferred resolution and things which // are unresolved at end of load and should be reported to user.","non-negative"
"/** * Recognizer for primary objects. A primary object is an object that is* created by the parser or by a user. Object that are created as a side* effect of importing some other object are not.* <p>* TODO: This doesn't belong in the Facade. It's a higher level function* used specifically for certain reverse engineering operations. - tfmorris* * @param handle* candidate* @return true if primary object.*/","non-negative"
"/** * SSS FIXME: Used anywhere? I don't see calls to this anywherepublic Operand buildDAsgnAssignment(Node node, IR_Scope s) {DAsgnNode dasgnNode = (DAsgnNode) node;s.getVariableCompiler().assignLocalVariable(dasgnNode.getIndex(), dasgnNode.getDepth());}**/","non-negative"
"/** * Utility method to encode a String in a way that allows it to be* saved properly in an XML file and regained filtering out any noice* that an XML framework might have seen fit to add.** TODO: Why are we doing this ourselves? Surely encoding information* for XML serialization is a well known task - tfm* I have never understood why this is being done. I think we should remove* any usage - bob** @param_x0001_str_x0001_The String to encode.* @return_x0001_The encoded String.*/","negative"
"//JASON: Remove?? //_session.getSessionSheet().getSQLPanel().executeSQL(sql)","non-negative"
"// I wish I could make this ""friendly"" to only NameSpace","non-negative"
"// If c2 is empty, then we're done (or there is a // cycle in the message graph, which would be bad) If // c2 has more than one element, then the model is // crappy, but we'll just use one of them anyway","non-negative"
"// Our superclass no longer has this method, so perhaps this whole // thing should be removed? - tfm // super.updateListeners(newOwner);","non-negative"
"// TODO should this also clear isDynamic, rawParameters, permanentResults?","non-negative"
"// FIXME: I think this chunk is equivalent to MRI id2name (and not our public method // id2name). Make into method if used more than once.","non-negative"
"/* * TODO: Exact ordering is only required for some tests; change the* comparison to do a set compare where necessary.*/","non-negative"
"// todo : should really move this log statement to CollectionType, where this is used from...","non-negative"
"// TODO: Do we really need to do this? Carried over from old behavior","negative"
"// Create block for this iter node // FIXME: We shouldn't use the current scope if it's not actually from the same hierarchy of static scopes","non-negative"
"// TODO: remove","non-negative"
"// This inner class implements a case statement....perhaps im being a bit over-clever here","non-negative"
"/** * Recognizer for Parameter's with a DirectionKind of Return.* TODO: This is a duplicate of {@link #hasReturnParameterDirectionKind(Object)}* @param handle candidate parameter* @return true if handle is a return parameter.*/","non-negative"
"// TODO: Temporary until we sort out a better way to do guido's fix // IQueryTokenizer qt2 = sessionUnderTest.getQueryTokenizer()","non-negative"
"// TODO: Find a way to replace this dependency on Project","non-negative"
"// TODO: Rather than specifically ignore some item maybe it would be better // to specifically state what items are of interest. Otherwise we may still // be acting on other events we don't need","non-negative"
"// Make sure this is a defined parameter and check the incoming value type // TODO: what should be the actual exception type here?","non-negative"
"// TODO is this a sensible number? //$NON-NLS-1$","non-negative"
"/** rb_ary_push_m* FIXME: Whis is this named ""push_m""?*/","non-negative"
"// TODO: The following handling of multiselection is just a local // solution for the fill color, better find a more general solution: // (I don't know if it's undoable this way - thn)","non-negative"
"// TODO: Only used by interface implementation","non-negative"
"// some other primitive // should avoid calling methods on primitive, as we do // in Name (can't treat primitive like an object message) // but the hole is useful right now.","non-negative"
"//TODO: copy/paste from insertRows()","non-negative"
"/** * Recognizer for ModelElements with package visibility.** TODO: This method name was chosen for compatibility with* the existing naming scheme, but has the potential of * clashing with some future use.* * @param handle candidate* @return true if handle has package visibility*/","non-negative"
"/* * TODO: This code manually processes the ElementImports of a* Package, but we need to check whether MDR already does something* similar automatically as part of its namespace processing.* - tfm - 20060408*/","non-negative"
"//TODO: if object was an uninitialized proxy, this is inefficient, // resulting in two SQL selects","negative"
"// TODO: setText in GEF should call setBounds instead of directly // changing x, y, w, h - then we will have an event generated // correctly in GEF","non-negative"
"// update the titleLabel // MVW: This overrules the icon set initiallly... Why do we need this?","non-negative"
"// FIXME: set up a CallConfiguration for this","non-negative"
"// Windows bug workaround in case a YES/NO confirm // was shown","negative"
"// Needed the ""clazz_"" check to work around union-subclasses // TODO : is there a way to tell whether a persister is truly discrim-column based inheritence?","non-negative"
"// do we need to update the crosshair values?","non-negative"
"// TODO: the above works in the current situation, but it's // just a hack. How to get each editor to report whether it // wants to grow bigger? Whether the property label should // be at the left or at the top of the editor? ...?","mixed"
"/** * This is the ""main"" class for the GUI subsystem.<p>** Users of the GUI subsystem, i.e. components that are to place themselves* in any of the GUI components, register themselves in this class.<p>** TODO: Add the rest of the registers to this.** @author Linus Tolke* @since 0.21.3*/","non-negative"
"// TODO: The following is MDR specific. We need something generic // to all Model subsystems - tfm 20070716","non-negative"
"/** * TODO: Copied from UmlDiagramRenderer.** Get the FigNode from the given layer that represents the given* model element.* The FigNode portion of an association class is returned in preference* to the FigEdge portion.* If no FigNode is found then a FIgEdge is searched for and the FigNode* that acts as its edge port is returned.* @param lay the layer containing the Fig* @param modelElement the model element to find presentation for* @return the FigNode presentation of the model element*/","non-negative"
"// TODO: This is probably related to the SendEvent that is sending the // Signal, but the association is not navigable in that direction","negative"
"/** * @param project the ArgoUML {@link Project} to save in file.* @param file the {@link File} in which an ArgoUML {@link Project} will* be persisted.* @return the persister used and usable for file.* @throws SaveException if saving the file goes wrong.* @throws InterruptedException if an interrupt occurs while saving.* TODO: move this to an helper class.*/","non-negative"
"/** * Field TODO: TextArea or TextField*/","non-negative"
"/** Fix bug: -D arg1=arg2 was causing parse error; however* --define arg1=arg2 is OK This seems to be because the parser* skips the terminator for the long options, but was not doing* so for the short options.*/","negative"
"//swaldman 2004-02-07: modify to allow null values to signify fall through to c3p0 PoolConfig defaults","non-negative"
"// TODO: is this a good idea?","negative"
"// TODO not used by GUI","non-negative"
"//TODO provide proper name?","negative"
"// TODO can this happen?","non-negative"
"// I know it's bad to create object. better idea?","negative"
"// TODO: This won't work when the column has values with quotes in them. // Use PreparedStatements instead. Hmmm... instead of insert statements, could we not // just create a sequence and generate a select statement that: // a) uses the sequence for the pkid // b) selects distinct values // That would be a more efficient approach that would also eliminate this quoting problem","mixed"
"//TODO: need to make the majority of this functionality into a top-level support class for custom impl support","non-negative"
"/** * Determine if the passed parameter has a RETURN direction kind.* * TODO: This is a duplicate of {@link #isReturn(Object)}* * @return true if it is a return direction kind* @param handle the parameter*/","non-negative"
"// TODO: confirm expected args are IRubyObject (or similar)","non-negative"
"//TODO: COPY/PASTE FROM SessionImpl, pull up!","negative"
"// TODO : an optimization here would be to consider cascade deletes and not gen those delete statements; // the difficulty is the ordering of the tables here vs the cascade attributes on the persisters -> // the table info gotten here should really be self-contained (i.e., a class representation // defining all the needed attributes), then we could then get an array of those","non-negative"
"// ignore...bean doesn't get registered // TODO: Why does that bother me?","negative"
"// TODO: This probably belongs with the Diagram subsystem","non-negative"
"// TODO: ActionState, CallState, and SubactivityState have been replaced // in UML 2.0 by explicitly modeled Actions","non-negative"
"// TODO there is a problem with the constructor for the RBC. // you have to provide the rules in the constructors - no setters // available.","negative"
"// this part sucks","negative"
"// TODO: This references the concrete factory // We need a factories factory","non-negative"
"// add a system property so samplers can check to see if JMeter // is running in NonGui mode // $NON-NLS-1$ // TODO - why does it create a new instance?","non-negative"
"/** * Moves some object to trash, i.e. deletes it completely with all* dependent structures. <p>** Deleting an object involves: <pre>* - Removing Target history* - Deleting all Fig representations for the object* - Deleting the UML element* - Deleting all dependent UML modelelements* - Deleting CommentEdges (which are not UML elements)* - Move to trash for enclosed objects, i.e. graphically drawn on top of* - Move to trash subdiagrams for the object* - Saveguard that there is always at least 1 diagram left* - If the current diagram has been deleted, select a new one to show* - Trigger the explorer when a diagram is deleted* - Set the needsSave (dirty) flag of the projectmanager* </pre>** @param obj The object to be deleted* @see org.argouml.kernel.ProjectImpl#trashInternal(Object)* <p> * TODO: This should just be named delete() or something which better * tells what it does (since there really isn't a trash can).*/","negative"
"/** * Utility function to localize the given string with help text, and show it* in the status bar of the ArgoUML window. This function is used in favour* of the inline call to enable later improvements; e.g. it would be* possible to show a help-balloon.* <p>* TODO: This code is also present in other root Figs...* * @param s the given string to be localized and shown */","non-negative"
"// FIXME: add setBaseItemURLGenerator(CategoryURLGenerator, boolean) ?","non-negative"
"// FIXME: Not sure what the semantics of transfer are //cFiber.defineFastMethod(""transfer"", cb.getFastOptMethod(""transfer""));","non-negative"
"/** * Creates a new checkbox menu item attached to the specified* action object and appends it to the end of this menu.* TODO: This is almost a duplicate of ArgoJMenu.addCheckItem must find a* way to merge.** @param a the Action for the checkbox menu item to be added* @return the new checkbox menu item*/","non-negative"
"// Surely this is always null in the constructor?","non-negative"
"// TODO: An Iterator filter would be nice here instead of the // mucking around with the Collection.","negative"
"//create an index on the key columns??","non-negative"
"// When I tried using a length for LONGVARBINARY that is the max // length of the source records, I get the following exception: // // Exception condition 239. Data exception - string data, right truncation. // I tried bit varying(32767) with data that had max length of 16384. So // it's back to maximum length hard-coded for now. // registerColumnType(Types.LONGVARBINARY, 2147000000, ""bit varying($l)"");","non-negative"
"// TODO: This should be managed by the DetailsPane TargetListener - tfm // remove the following line","non-negative"
"// here's a quirk - the API has been defined in terms of a plain // TimePeriod, which cannot make use of the timezone and locale // specified in the constructor...so we only do the time zone // pegging if the period is an instanceof RegularTimePeriod","negative"
"// TODO: what about n arg?","non-negative"
"/** * Copy a file from source to destination.** TODO: Perhaps belongs in a utilities class of some sort.** @param source the source file to be copied* @param dest the destination file* @return success status flag*/","non-negative"
"// TODO: MVW: This needs rethinking/rework! I have the following questions: // Why does it not search for a stereotype in the namespace using // properties and only create a new stereotype if it will actually be used? // Ie, why is there not a getStereotype(String name, String baseClass)? // (edited by d00mst)","negative"
"// TODO: What do we want to use as an equivalent here?","non-negative"
"/** * Defines the methods to generate source code from the model. Each class* providing code generation functionality must implement this to be recognized* by ArgoUML as a code generator.* <p>* TODO: A GUI-independent mechanism to pass settings to the code generator is* needed similar to what we have for reverse engineering. See* {@link org.argouml.uml.reveng.ImportInterface#getImportSettings()} and * {@link org.argouml.uml.reveng.SettingsTypes}* * @since 0.20 when it replaced the FileGenerator interface.*/","non-negative"
"/** * Changes the font for all Figs contained in the given FigGroup. <p> * * TODO: In fact, there is a design error in this method: * E.g. for a class, if the name is Italic since the class is abstract, * then the classes features should be in Plain font. * This problem can be fixed by implementing * the updateFont() method in all subclasses.** @param fg the FigGroup to change the font of.*/","negative"
"// TODO: eliminate?","non-negative"
"// Slight hack - we need to ensure the TestClass is not reset by the previous call","negative"
"// Hack: bsh-2.0b5.jar BshScriptEngine implements Compilable but throws ""java.lang.Error: unimplemented""","negative"
"// there must be a better way of fixing this... // the problem is that this method can sometimes // be called as a result of a text area scroll // event, in which case the caret position has // not been updated yet.","negative"
"// TODO fetch list of languages from a file? // N.B. Changes to language list need to be reflected in // resources/PackageTest.java","non-negative"
"// SSS FIXME: Where does this go? // m.setLinePosition(arrayNode.getPosition())","non-negative"
"// TODO: break into 3 main member types // model, diagram and other","non-negative"
"// TODO: In JFreeChart 1.2.0, put this method in the // CategoryItemRenderer interface","non-negative"
"// NOTE: Source and line arguments are nonsense in a call(). // Any way to make these arguments *sensible?","negative"
"//TODO replace with proper Exception // return with an error","negative"
"// TODO: this actually returns permissions with stereotypes // of both <<access>> and <<import>> when the spec calls for // only the former, but that seems to give different semantics // to the way package imports work. Review to see which is wrong.","negative"
"//TODO: nothing appears to read this but is set using a public setter.","non-negative"
"// TODO: Some of these magic numbers probably assume a line // width of 1. Replace with appropriate constants/variables.","non-negative"
"/* trim done to workaround stupid oracle bug that cant handle whitespaces before a { in a sp */","negative"
"// CREATE ENTITIES // FIXME: these methods should be defined","non-negative"
"// TODO Hack that should be removed.","negative"
"//TODO: Somehow add the newly created foreign keys to the internal collection","non-negative"
"// TODO: When JDK1.4 is the earliest JDK supported // by Squirrel then remove the hardcoding of the // boolean data type.","non-negative"
"// TODO: Move an empty implementation to FigGroup in GEF","non-negative"
"// TODO : perhaps we should additionally require that the incoming entity // version be equivalent to the defined unsaved-value?","non-negative"
"// TODO - charset? // TODO this should really be request data, but there is none","negative"
"// TODO: figure out why bind variables aren't working","negative"
"//TODO: temporary","non-negative"
"// TODO: Do all these classes need to be in their own files? public?","non-negative"
"/*_x0001__x0001_Note: the bsh command code should probably not be here... we need to_x0001__x0001_scope it by the namespace that imported the command... so it probably_x0001__x0001_needs to be integrated into NameSpace._x0001_*/","non-negative"
"//note that i parameter is now unused (delete it?)","non-negative"
"// * @TODO using taskName here is brittle, as a user could override it. // * this should probably be modified to use the classname instead.","negative"
"// We're deleting the last diagram so lets create a new one // TODO: Once we go MDI we won't need this.","non-negative"
"// TODO: Workaround for GEF redraw problem // Force all child figs into the same layer","negative"
"// Hack to allow external control","negative"
"// Check if labels etc have been hit // Apparently GEF does require PathItems to be ""annotations"" // which ours aren't, so until that is resolved...","negative"
"// TODO: It's probably worthwhile to abstract and factor // this chooser and directory stuff. More file handling is // coming, I'm sure.","non-negative"
"// TODO: Ruby does not seem to care about invalid numeric mode values // I am not sure if ruby overflows here also...","non-negative"
"// JDK 1.4 workaround","negative"
"// This should be per instance","non-negative"
"//aliasRefNode.resolve( false, false, aliasRefNode.getText() ); //TODO: is it kosher to do it here? //TODO: is it kosher to do it here?","negative"
"/// a kludge to make everything work when no rows returned","negative"
"// next version: remove this","non-negative"
"// sql-server, at least needed this dropped after use; strange!","negative"
"// TODO: Is it appropriate the TemplateableElement as the client and a // list of TemplateParameterSubstitution as the list of parameters?","non-negative"
"// TODO: Add standard stereotype? Set is open ended, but // predefined names include: call, create, instantiate, send","non-negative"
"/*_x0001__x0001_Notes: See notes on findMostSpecificMethod._x0001__x0001_This method should be rolled into findMostSpecificMethod._x0001_*/","non-negative"
"// TODO: throw IllegalArgumentException in case a variable == null","non-negative"
"/* * Not clear what can cause this ? conflicting versions perhaps*/","negative"
"// TODO fix this when there is a real implementation","non-negative"
"// This could be smarter...","negative"
"// TODO: Bob says - // We're looking at focus change to // flag the start of an interaction. This // is to detect when focus is gained in a prop // panel field on the assumption editing of that // field is about to start. // Not a good assumption. We Need to see if we can get // rid of this.","negative"
"// TODO: complete this","non-negative"
"// TODO Ristretto should handle the logging of streams in another // way.","non-negative"
"// TODO: This is currently duplicated from MetaDataCache - must find a // common place in model facade","non-negative"
"// We are displaying a new dataset, so if there was // a cell editor in operation, tell it to cancel. //???? How does this impact popup display?","non-negative"
"// workaround for missing ability to parse ""*""","non-negative"
"//TODO: this bit actually has to be called after all cascades! // but since identity insert is called *synchronously*, // instead of asynchronously as other actions, it isn't","negative"
"// SSS FIXME: Does int suffice, or do we need long?","non-negative"
"// FIXME: This determine module is in a strange location and should somehow be in block","negative"
"// TODO ? if this class listen the model, it will be able to // change in live as it is done in the figs (diagram)","non-negative"
"/* * TODO should these fields be public? * They don't appear to be used externally. *  * Also, are they any different from HTTPConstants.GET etc. ? * In some cases they seem to be used as the method name from the Tomcat log. * However the RMETHOD field is used as the value for HTTPSamplerBase.METHOD, * for which HTTPConstants is most approriate. */","non-negative"
"// should indicate that we are processing an INSERT/UPDATE/DELETE // query with a subquery implied via a collection property // function. Here, we need to use the table name itself as the // qualification alias. // TODO : verify this works for all databases... // TODO : is this also the case in non-""indexed"" scenarios?","non-negative"
"// TODO: this doesn't belong in the implementation specific piece - tfm","non-negative"
"// For PointBase, if type maps to Pointbase ""BLOB"", and the size // isn't valid (PB requires size for BLOBS) then set it to something // reasonably large, like 16MB. 1 is the default size if no size // is specified. That's practically useless :)","negative"
"// now handle specific plot types (and yes, I know this is some // really ugly code that has to be manually updated any time a new // plot type is added - I should have written something much cooler, // but I didn't and neither did anyone else).","negative"
"/* TODO: This needs work... * We also need to listen to addition/removal * of states to/from a ClassifierInState. */","negative"
"//TODO: move to utils class (JMeterUtils?)","non-negative"
"// SampleEvent is not passed JMeterVariables, because they don't make sense for Proxy Recording // TODO - is this the correct threadgroup name?","non-negative"
"// TODO should really return most specific (i.e. longest) match.","non-negative"
"/* if an occurence occurs at the_x0001__x0001_beginning of the selection, the_x0001__x0001_selection start will get moved._x0001__x0001_this sucks, so we hack to avoid it. */","negative"
"// TODO: I believe the following code (to the end of the method) is // obsolete, // since NamePanel no longer seems to be the GUI for any component:","negative"
"// TODO deprecate (since getPluginClass() is no longer called) //","non-negative"
"// We would probably refactor to have LogicParser (builds a tree of simple // expressions connected by and, or, not), ExpressionParser (translates // from OO terms like foo, foo.Bar, foo.Bar.Baz to SQL terms like // FOOS.ID, FOOS.BAR_ID, etc) and PathExpressionParser (which does much // the same thing it does now)","non-negative"
"/*TODO move resources to a resource file */","non-negative"
"// XXX what is the following doing? // should it run if !javadoc4 && executable != null?","non-negative"
"// FIXME remove method // toolbarPane.add(c)","non-negative"
"// TODO factor up into GenBaseImpl? //","non-negative"
"// this is a hack, and really needs to be done better.","negative"
"// TODO: We may want to restrict the list to parameters which // conform to the following WFR: // parameter.type = ofstype // or (parameter.kind = #in // and ofstype.allSupertypes->includes(type)) // or ((parameter.kind = #out or parameter.kind = #return) // and type.allSupertypes->includes(ofstype)) // or (parameter.kind = #inout // and ( ofstype.allSupertypes->includes(type) // or type.allSupertypes->includes(ofstype))))","non-negative"
"// FIXME: Check that there isn't already a series with the same key","non-negative"
"// Mark the contain FigPoly as complete. // TODO: I think more work is needed in GEF to either do this // automatically when both ends are set or at the very least // Give a setComplete method on FigPolyEdge that calls its // contained poly","non-negative"
"// FIXME: We should not be regenerating this over and over","negative"
"// $NON-NLS-1$ TODO should this be a variable?","non-negative"
"// XXXX re-evaluate this // can getSuper work by itself now? // If we're a class instance and the parent is also a class instance // then super means our parent.","non-negative"
"// Don't call super. Packing this frame causes problems.","negative"
"/** * Remove this diagram from existence. *  * TODO: Move to GEF */","non-negative"
"// this will probably not get used // Object type","non-negative"
"/** * <p>Determines if the FigEdge is currently connected to the correct * FigNodes, if not the edges is the correct FigNodes set and the edge * rerouted. * <p>Typically this is used when a user has amended from the property * panel a relationship from one model element to another and the graph * needs to react to that change. * <p>e.g. if the participant of an association end is changed. * <p>Calls a helper method (layoutThisToSelf) to avoid this edge * disappearing if the new source and dest are the same node. * * TODO: This method is called far too frequently. It should only be called * when a specific event is received. It seems to be currently called whenever * any event is received from the owner. * * @return boolean whether or not the update was sucessful */","negative"
"// retarded GTK look and feel!","negative"
"// Java 1.6.0_22+ no longer allows Content-Length to be set, so don't check it. // See: http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6996110 // TODO any point in checking the other headers?","non-negative"
"//TODO: this is one of the ugliest and most fragile pieces of code in Hibernate....","negative"
"// XXX is the following really necessary? it is in the same thread group...","negative"
"// we have to find a cleaner way to put this output","non-negative"
"// This is the old way and is deprecated - classespath is // the right way to do this and is above","negative"
"// For Script example that modifies id'ed tasks in other // targets to work. *very* Ugly // The reference is replaced by RuntimeConfigurable","negative"
"// sorry - otherwise we will get a ClassCastException because the MockCache // is loaded by two different classloader ...","negative"
"// ***HACK*** We ask the VM to create an instance // by voluntarily providing illegal arguments to force // the VM to run the class' static initializer, while // at the same time not running a valid constructor.","negative"
"// XXX - shouldn't this always return false in isolated mode?","non-negative"
"// Do we need to add tests for the following? // // AggregationKind // ChangeableKind // MessageDirectionKind // OrderingKind // ParameterDirectionKind // PseudostateKind // ScopeKind // VisibilityKind //","non-negative"
"// FIXME formatters are not thread-safe","negative"
"// I hate to admit it, but we don't know what happened // here.  Throw the Exception.","negative"
"// This would be sensible, but does not work: // public int hashCode() // { // return propMap.hashCode(); // }","negative"
"// Bug in above method","non-negative"
"// TODO: This brute force approach of updating listeners on each // and every event, without checking the event type or any other // information is going to cause lots of InvalidElementExceptions // in subclasses implementations of updateListeners (and they // won't have the event information to make their own decisions)","negative"
"// TODO: Issue 6144. It is proposed to allow any paclage to return as a potential // namespace. Commenting out until this is reviewed and clearly accepted by all.","non-negative"
"// TODO: key can't be null","non-negative"
"// TODO: Deal with the """"optional"""" attribute in the <join> mapping; // this code assumes that optional defaults to """"true"""" because it // doesn't actually seem to work in the fetch=""""join"""" code // // Note that actual proper handling of optional-ality here is actually // more involved than this patch assumes.  Remember that we might have // multiple <join/> mappings associated with a single entity.  Really // a couple of things need to happen to properly handle optional here: //  1) First and foremost, when handling multiple <join/>s, we really //      should be using the entity root table as the driving table; //      another option here would be to choose some non-optional joined //      table to use as the driving table.  In all likelihood, just using //      the root table is much simplier //  2) Need to add the FK columns corresponding to each joined table //      to the generated select list; these would then be used when //      iterating the result set to determine whether all non-optional //      data is present // My initial thoughts on the best way to deal with this would be // to introduce a new SequentialSelect abstraction that actually gets // generated in the persisters (ok, SingleTable...) and utilized here. // It would encapsulated all this required optional-ality checking...","non-negative"
"// only works for jEdit plugins","non-negative"
"//return cal.getTimeInMillis(); // preceding code won't work with JDK 1.3","negative"
"/* TODO: We should use implicit nil for body, but problem (punt til later)*/","non-negative"
"/* TODO: link to the Signal. */","non-negative"
"/*TODO create javadocs for class */","non-negative"
"//TODO find a decent name before documenting","negative"
"// Fixme: Only F_SETFL and F_GETFL is current supported // FIXME: Only NONBLOCK flag is supported // FIXME: F_SETFL and F_SETFD are treated as the same thing here.  For the case of dup(fd) we //   should actually have F_SETFL only affect one (it is unclear how well we do, but this TODO //   is here to at least document that we might need to do more work here.  Mostly SETFL is //   for mode changes which should persist across fork() boundaries.  Since JVM has no fork //   this is not a problem for us.","non-negative"
"// Predecessors used to be not implemented, because it // caused some problems that I've not found an easy way to handle yet, // d00mst. The specific problem is that the notation currently is // ambiguous on second message after a thread split. // Why not implement it anyway? d00mst // TODO: Document this ambiguity and the choice made.","negative"
"// UML 1.4 spec is ambiguous - English says no Association or  // Generalization, but OCL only includes Association //                || Model.getFacade().isAGeneralization(dm)","non-negative"
"// TODO Document the reason for this","non-negative"
"//TODO (@author fdietz): Add proper description here","negative"
"// FIXME: Document difference between warn and warning (or rename one better)","non-negative"
"// not sure whether this test is needed but cost nothing to put. // hope it will be reviewed by anybody competent","negative"
"// TODO make these separate tests?","non-negative"
"// TODO some more invalid sequence tests needed","non-negative"
"// TODO: No test coverage for this or createPropPanel? - tfm","non-negative"
"//TODO: Test Mac keyboard accelerator changes done here by mlivingstone // shortcut key","non-negative"
"// TODO Update this after old tests pass and then update the old tests to reflect this change. //","non-negative"
"// TODO: the '\n' literal here should be a test against REToken.newline, // which unfortunately may be more than a single character.","negative"
"// if the method is extending something, then we have // to test if the handler is initialized...","non-negative"
"// Need better test for Windows","negative"
"// XXX - log an error?  throw an exception?","non-negative"
"// Should we exit at end of the test? (only applies to server, because host is non-null)","non-negative"
"// TODO ? perhaps note connection so it can be disconnected at end of test?","non-negative"
"// TODO: This work should be deferred until actually  // needed for display","non-negative"
"// Empty implementation.","non-negative"
"// Use a little trick to find out where Argo is being loaded from. // TODO: Use a different resource here. ARGOINI is unused and deprecated","non-negative"
"// TODO: Need UML 2.x equivalent","non-negative"
"// TODO (@author karlpeder): Implementation of undo/redo missing","non-negative"
"// TODO handle situation when ASTJNode is removed (compilationUnit is null)","non-negative"
"// TODO: RESTRICT VIOLATION","non-negative"
"//TODO: make this handle multiple collection roles!","non-negative"
"// could make this configurable","non-negative"
"// TODO: adjust length so it won't fall in the middle  // of a multi-byte character. MRI's sprintf.c uses tables // in a modified version of regex.c, which assume some // particular  encoding for a given installation/application. // (See regex.c#re_mbcinit in ruby-1.8.5-p12)  // // This is only an issue if the user specifies a precision // that causes the string to be truncated. The same issue // would arise taking a substring of a ByteList-backed RubyString.","non-negative"
"// FIXME: optimize for cases where we have no false branch","non-negative"
"// TODO: check if too many open files, GC and try again","non-negative"
"// Not yet ready // DataImportGlobalPreferencesTab tab = new DataImportGlobalPreferencesTab(); // return new IGlobalPreferencesPanel[] { tab };","non-negative"
"// stolen from org.apache.xerces.impl.XMLEntityManager#getUserDir() // of the Xerces-J team // which ASCII characters need to be escaped","non-negative"
"// MAC OS 9 and previous //TODO: I have no idea how to get it, someone must fix it","negative"
"// not very nice but will do the job","mixed"
"// TODO improve this","negative"
"// houston we have a problem !!","negative"
"// TODO - not sure this is the best method","negative"
"// If child of TransactionController is a ThroughputController and TPC does // not sample its children, then we will have this // TODO Should this be at warn level ?","non-negative"
"// TODO does not appear to be used","non-negative"
"// Temporary fix to allow default protocol to be changed","non-negative"
"// TODO: There is a cyclic dependency between SelectionRerouteEdge // and FigEdgeModelElement","non-negative"
"// These methods are based on the GraphEvents. These need replacing by // more specic meaningful requests of the diagram interface model","non-negative"
"// TODO: UML 1.4 spec requires both client and supplier to be // in the same model - tfm","non-negative"
"// TODO: Use default value of appropriate type for TD","non-negative"
"// TODO: Move magic number 10 to descriptive constant","non-negative"
"// TODO: This method is obsolete.  Use getInputMap etc as below","negative"
"/* TODO: really should be a separate class */","negative"
"""// Load .xmi file before any PGML files // FIXME: the following is loading the model before anything else. // Due to the Zargo containing the profiles, currently we have // removed this hack in UmlFilePersister and I think it should be // removed from here also.""","negative"
"// TODO: Attempt to move the following code to GEF","non-negative"
"/* The next 4 lines fix the 2nd half of issue 5638. * Is there no better way? */","non-negative"
"// FIXME (@author karlpeder): Is 3.2 the proper version of html to refer to?","non-negative"
"// @TODO dont use deprecated method","non-negative"
"//TODO: Should this be renamed to cLoc or something more appropriate than clock?","negative"
"// Since Columba is doing its own logging handlers, we should not // use handlers in the parent logger.","non-negative"
"//DMS  Do a better job with specific exceptions? Just use chained RuntimeExceptions?","non-negative"
"// This functionality should eventually go away, as it is replaced by model exporters. // We'll just delegate to the deprecated GenPackage method. The monitor isn't used, so we won't pass it. //","non-negative"
"// Per Schema 1.0 it is not clear if the result returned should be a valid URI.  // For the future if we plant to support IRIs then it is better not to massage // the initialValue.  // We should thought consider where would be the best way to validate anyURI values -- EL","non-negative"
"// todo : what is the implication of this?","non-negative"
"//TODO: merge into one method!","negative"
"//TODO: inefficient","negative"
"//workaround, for backward compatibility of sets with no //not-null columns, assume all columns are used in the //row locator SQL","non-negative"
"// VERY IMPORTANT!!!! - This class needs to be free of any static references // to any CGLIB or Javassist classes.  Otherwise, users will always need both // on their classpaths no matter which (if either) they use. // // Another option here would be to remove the Hibernate.isPropertyInitialized() // method and have the users go through the SessionFactory to get this information.","negative"
"// TODO : YUCK!!!  fix after HHH-1907 is complete","negative"
"//SPACES //TODO: i'm not sure, but perhaps we should exclude //      abstract denormalized tables?","non-negative"
"// unhappy about this being public ... is there a better way?","negative"
"// could refactor these a bit","non-negative"
"/*        Can't this be combined with run() ?         run seems to have stuff in it for  interactive vs. non-interactive...         compare them side by side and see what  they do differently, aside from the         exception handling.         */","non-negative"
"// Note: incorrect here - we are using the hack in bsh class // manager that allows lookup by base name.  We need to eliminate // this limitation by working through imports.  See notes in class // manager.","negative"
"/* this is stupid and misleading.                                          * but 'path' is not used anywhere except                                          * the above line, and if this is done                                          * after the 'continue', then we will                                          * either hang, or be forced to duplicate                                          * it inside the buffer == null, or add                                          * a 'finally' clause. you decide which one's                                          * worse. */","negative"
"// I'm too tired to think of a better way // to handle this right now.","negative"
"// compatibility kludge for jEdit 3.1 and earlier","negative"
"// XXX: This should not be hardcoded","negative"
"// TODO: it might be a good idea to keep a reference to the color // specified in setPaint() or setColor(), rather than creating a // new object every time getPaint() is called.","non-negative"
"// FIXME: this attribute is not used - deprecate?","non-negative"
"// now we handle some special cases - yes, UGLY code alert!","negative"
"// it would be nice (and logical!) if exponent form  // behaved like E/e, and decimal form behaved like f, // but no such luck. hence: ","negative"
"// FIXME: legal here? may want UnsupportedOperationException","non-negative"
"// if not overloaded, we add a method that guesses at which signature to use // TODO: just adding first one right now...add in signature-guessing logic","non-negative"
"// grrr, arghh, want to subclass sun.misc.FloatingDecimal, but can't, // so we must do all this (the next 70 lines of code), which has already // been done by FloatingDecimal.","negative"
"// TODO: This probably isn't the best hack, but it works until we can have different // root frame setup for 1.9 easily.","negative"
"// FIXME: Big fat hack here, because scope names are expected to be interned strings by the parser","negative"
"// FIXME: null check is removable once we figure out how to assign to unset named block args","non-negative"
"/**  * FIXME: This version is faster than the previous, but both suffer from a  * crucial flaw: It is impossible to create an ObjectSpace with an iterator  * that doesn't either: a. hold on to objects that might otherwise be collected  * or b. have no way to guarantee that a call to hasNext() will be correct or  * that a subsequent call to next() will produce an object. For our purposes,  * for now, this may be acceptable.  */","negative"
"// Here, I don't completely understand how these types are to be used in all databases and I haven't // yet had time to implement support in the dialects for them. So, this exclude list will keep these // less commonly used types from failing the test. Also, since not all of these types appear in Java5 // and we currently support compiling the code base with it, I use the integer values for new types // that were introduces in Java6, rather than the type constant name.","non-negative"
"/*                          * TODO: When 1.4 is the earliest version supported, add the following line:                         *                setSurrendersFocusOnKeystroke(true);                         * This should help handle some problems with navigation using tab & return                         * to move through cells.                         */","non-negative"
"// The following ugly conversion from text to Byte is necessary because // the Byte class is inconsistant.  When asked to output as Hex, it does // so as an UNSIGNED byte, but when asked to read back the same thing // using the Hex radix, it insists that the input must be SIGNED. // To get around this, we up-size the conversion to Integer, then  // truncate that to a byte, and finally convert the byte to a Byte.  Yech.","negative"
"// Discovered that the loginame field can be null - in that case, how to know we have the correct view?","non-negative"
"// TODO: just noticed that MySQL 5.0 supports a multi-bit BIT // column by using the getObject/setObject methods with a byte[]. // So it would be valuable at some point to make this code a bit // more dbms-specific","non-negative"
"// TODO: figure out a more reliable way to handle OTHER type // which indicates a database-specific type.","non-negative"
"//?? Is there any way to check for invalid input?  Valid input includes //?? at least any printable character, but could it also include unprintable //?? characters?","non-negative"
"// The following only works if SwingUtilities.getRoot(table) returns // and instanceof BaseMDIParentFrame. // If SwingTUilities.getRoot(table) returns and instance of Dialog or // Frame, then other code must be used.","non-negative"
"// the generated classes must not be added in the generic JAR! // is that buggy on old JOnAS (2.4) ??","negative"
"/*     * Fix bug in JVMs that return true/false rather than True/False      * from the type editor getAsText() method     */","non-negative"
"/* TODO: The above statement also refreshes when                          * we are not shown (to be erified) - hence                          * not entirely correct. */","non-negative"
"// TODO: This is a tagged value name which will never trigger an event","non-negative"
"// bug #997560 (fdietz): CC: should be in Cc:, instead of To: //toList.addAll(Arrays.asList(rfcHeader.getCc()));","non-negative"
"// This doesn't actually seem to work but it *might* // work on some dbs. Also it doesn't work if there // are multiple columns of results because it // is not accounting for the suffix: // return new String[] { getDiscriminatorColumnName() };","mixed"
"// Technically incorrect here - we need to wrap null values // as bsh.Primitive.NULL.  However the This.invokeMethod() // will do that much for us. // We need to generate a conditional here to test for null // and return Primitive.NULL","non-negative"
"// todo: not serialized yet","non-negative"
"// TODO: full-precision remainder is 1000x slower than MRI!","negative"
"/*                 * TODO: When 1.4 is the earliest version supported, include                 * the following line here:                 *         scrollPane.setWheelScrollingEnabled(true);                 * The scroll-wheel function is important for ease of use, but the                 * setWheelScrollingEnabled function is not available in java 1.3.                 */","non-negative"
"/** XXX I really don't like this - the XML processor is still              * too 'involved' in the processing. A better solution (IMO)             * would be to create UE for Project and Target too, and              * then process the tree and have Project/Target deal with              * its attributes ( similar with Description ).              *             * If we eventually switch to ( or add support for ) DOM,              * things will work smoothly - UE can be avoided almost completely              * ( it could still be created on demand, for backward compatibility )             */","negative"
"// This is faintly ridiculous:","negative"
"/**  * Jakarta Commons Logging listener.  * Note: do not use the SimpleLog as your logger implementation as it  * causes an infinite loop since it writes to System.err, which Ant traps  * and reroutes to the logger/listener layer.  *  * The following names are used for the log:  *  org.apache.tools.ant.Project.PROJECT_NAME  - for project events  *  org.apache.tools.ant.Target.TARGET_NAME - for target events  *  TASK_CLASS_NAME.TARGET_NAME - for events in individual targets.  *  * In all target and project names we replace """"."""" and """" """" with """"-"""".  *  * TODO: we should use the advanced context logging features (and expose them  * in c-l first :-)  * TODO: this is _very_ inefficient. Switching the out and tracking the logs  * can be optimized a lot - but may require few more changes to the core.  *   * @since Ant 1.5  */","negative"
"// Should move to a separate public class - and have API to add // listeners, etc.","non-negative"
"// TODO do contentType and/or dataEncoding belong in HTTPSampleResult instead?","non-negative"
"// Programming error: bail out.","negative"
"// N.B. Needs to implement Visualizer so that TestBeanGUI can find the correct GUI class","non-negative"
"/*          * Does the system support UNC paths? If so, may need to fix them up          * later          */","non-negative"
"// Method is broken anyway","negative"
"/*              * Provide dummy implementations to suppress download and display of              * related resources: - FRAMEs - IMAGEs TODO create better dummy              * displays TODO suppress LINK somehow             */","non-negative"
"// MenuBar related methods // TODO: Do we really need to have all these menubar methods duplicated // here? Perhaps we can make the menu bar accessible through GuiPackage?","negative"
"// TODO: We need to rethrow this as some other exception // type but that is too much change for the moment.","non-negative"
"/*      * TODO: This is a temporary method of making sure the model is updated      * on loss of focus of a combo box. In the long term we should attempt to      * update the model on each keypress.      *      * @see java.awt.event.FocusListener#focusLost(java.awt.event.FocusEvent)      */","non-negative"
"/**      * @return the statemachine          * TODO: If this method is called by any of the Figs, it will introduce      * a dependency cycle.  It would be much better if they could just      * use {@link org.argouml.uml.diagram.ArgoDiagram#getOwner()} which does      * the same thing.      */","non-negative"
"// TODO Handle multiple top level packages","non-negative"
"// TODO: define constants for magic numbers","non-negative"
"/*      * TODO: This is the same as in parent - remove?      * @see org.argouml.uml.diagram.ui.FigNodeModelElement#updateBounds()      */","non-negative"
"// hack in order to be able to compile in java1.3","negative"
"/**      * Set the target anew.      *      * TODO: This method is never used. What is its intention? Remove it?      */","non-negative"
"// TODO: What progressMgr is to be used here? Where does //       it come from?","non-negative"
"// TODO: What does the magic number 6000 represent here? // Put it in an explanatory literal! - tfm - 20071205","negative"
"/**  * Class to manage Project related actions which need to be (or historically  * have been) managed as singletons.  *  * TODO: It's unclear to me whether all of these actually have to be managed as  * singletons, but for now I've just moved them from ProjectBrowser as is. - tfm  *   *  @author Tom Morris  */","non-negative"
"// TODO (@author fdietz): should be removed if we only use // Streams!","negative"
"// TODO (@author fdietz): i18n","non-negative"
"// hack: if start and end time is at 00:00:00:000 it is // an all day event","negative"
"/*          * TODO (@author karlpeder): Guess that right thing to do is to get height as getDrawingSize().getHeight(),          * since this should take top- and bottom margin of this print          * object into account. But the height seems not to be set          * correctly in  computePositionAndSize() (*20030604, karlpeder*)          */","negative"
"// Ensure that this race condition is thread safe; it doesn't matter who wins the race. //","non-negative"
"// TODO fix the space above","non-negative"
"// REVISIT: Remove this code. // Store port value as string instead of integer","non-negative"
"// use COUNT as the default.  This mimics the old behavior, although // NONE might be a better option moving forward in the case of callable","non-negative"
"//use of trim() here is ugly?","negative"
"//for arrays, we should end the collection load before resolving //the entities, since the actual array instances are not instantiated //during loading //TODO: or we could do this polymorphically, and have two //      different operations implemented differently for arrays","non-negative"
"/**          * This form used from annotations (?).  Essentially the same as the above using a          * resultset-mapping reference, but without cacheMode, readOnly, and comment.          *          * FIXME: annotations do not use it, so it can be remove from my POV          * @deprecated          *          *          * @param query The sql query string          * @param resultSetRef The result-set-mapping name          * @param querySpaces Any specified query spaces (used for auto-flushing)          * @param cacheable Whether the query results are cacheable          * @param cacheRegion If cacheable, the region into which to store the results          * @param timeout A JDBC-level timeout to be applied          * @param fetchSize A JDBC-level fetch-size to be applied          * @param flushMode The flush mode to use for this query          * @param parameterTypes parameter type map          * @param callable Does the query string represent a callable object (i.e., proc)          */","non-negative"
"/////////////////////////////////////////////////////////////////////// // HACK ALERT !!!!!!!!!!!!!!!!!!!!!!!!!!!! // Attempt to work around """"ghost"""" ImpliedFromElements that occasionally // show up between the actual things being joined.  This consistently // occurs from index nodes (at least against many-to-many).  Not sure // if there are other conditions // // Essentially, look-ahead to the next FromElement that actually // writes something to the SQL","negative"
"// short-circuit for performance...","negative"
"//should this interface extend PropertyMapping?","non-negative"
"/*                         Implement String += value;                         According to the JLS, value may be anything.                         In BeanShell, we'll disallow VOID (undefined) values.                         (or should we map them to the empty string?)                 */","non-negative"
"/* Should check for strict java here and use isJavaAssignable() instead */","non-negative"
"// this method is a nightmare","negative"
"/*                 Note: We will ll move this behavior out to a subclass of                  NameSpace, but we'll start here.         */","non-negative"
"// stupid: caret will automatically be incremented","negative"
"// Workaround for JDK bug 4071281, where system.in.available()  // returns too large a value. This bug has been fixed in JDK 1.2.","non-negative"
"// wtf?","negative"
"// this may be negative","negative"
"// calculate the adjusted data area taking into account the 3D effect... // this assumes that there is a 3D renderer, all this 3D effect is a // bit of an ugly hack...","negative"
"// a redraw should NOT trigger another change event","negative"
"// FIXME better ask the renderer instead of DatasetUtilities","non-negative"
"// we basically ignore protocol. let someone report it...","negative"
"// this covers the rare case of lower-case class names (and thus will // fail 99.999% of the time). fortunately, we'll only do this once per // package name. (and seriously, folks, look into best practices...)","negative"
"// Simplify the variables too -- to keep these variables in sync with what is actually used in the when clauses // This is not required for correctness reasons, but only for performance reasons.","non-negative"
"/*          * TODO: This version is better than the hackish previous one. Windows          *       behavior needs to be defined though. I suppose this version          *       could be improved more too.          * TODO: /etc/passwd is also inadequate for MacOSX since it does not          *       use /etc/passwd for regular user accounts          */","mixed"
"/* Workaround for JRUBY-2326 (MRI does not enter this production for some reason)*/","negative"
"// TODO: NOT_ALLOCATABLE_ALLOCATOR may be ok here, but it's unclear how Structs // work with marshalling. Confirm behavior and ensure we're doing this correctly. JRUBY-415","non-negative"
"// Object#to_a is obsolete.  We match Ruby's hack until to_a goes away.  Then we can  // remove this hack too.","negative"
"/**  *  * @author headius  * FIXME convert to enum ?  */","non-negative"
"// TODO: Hard coded -. JDBC/ODBC bridge JDK1.4 // brings back -9 for nvarchar columns in // MS SQL Server tables.","negative"
"// Always add plugins - there is not a good way to compare plugin zips and their extracted contents // at the moment. // TODO: Determine the best way to derive the filesize and checksum of the plugin zip that was last // extracted. Should we keep it around? How about using the current release.xml file ? Come to // think of it, perhaps we shouldn't be computing the checksum of *any* existing files, why don't // we just get it from the current release.xml file?","negative"
"/**         * the utility class that reads and writes release info from/to the release.xml file TODO: Spring-inject          * when this class is a Spring bean         */","non-negative"
"// This is weird - if I don't set this the column header doesn't line up // with the column contents.","negative"
"// This is (a logically not sufficent) try to cope with the problem that there are the following // contradictory rules in the JDBC API Doc: // Statement.getResultSet(): // This method should be called only once per result. // Statement.getUpdateCount(): // This method should be called only once per result. // Statement.getMoreResults(): // There are no more results when the following is true: (!getMoreResults() && (getUpdateCount() == -1) // // If getMoreResults() returns false, we don't know if we have more results, we only know that it isn't // a result set. Since we called getUpdateCount() before getMoreResults() because we would like to know // the update count of the first result, we might not be allowed to call getUpdateCount() again. // // The Intersystems Cache Driver for example always returns the same updateCount on simple // INSERT, UPDATE, DELETE statements not matter if getMoreResults() was called. So updateCount never // gets -1 and this will loop forever. When I discussed the issue with the Intersystems people they // just told me not to call getUpdateCount() twice. That simple. My hope is that this will cure // problems with DBs that just don't care for multiple result sets.","negative"
"// TODO: - Col - Add method to Databasemetadata that returns array // of objects for getBestRowIdentifier. For PostgreSQL put this kludge in // the new function. THis way all the kludges are kept in one place. // // KLUDGE!!!!!! // // For some DBs (e.g. PostgreSQL) there is actually a pseudo-column // providing the rowId, but the getBestRowIdentifier function is not // implemented.  This kludge hardcodes the knowledge that specific // DBs use a specific pseudo-column.  Additionally, as of pg 8.1, // you must create the table using """"WITH OID"""" appended to the create // statement.  Otherwise, OID column is not available by default. //","negative"
"/**          * TODO: move to IOUtilities          *           * @see  net.sourceforge.squirrel_sql.client.update.UpdateUtil#createZipFile(FileWrapper, FileWrapper[])          */","non-negative"
"/**      * Add a Comment with the given string      *      * TODO: Currently a no-op, doc is read only      *      * @param text the property      */","non-negative"
"/**  * Test delivery of Model events.  *  * TODO: We have not documented exactly what events arrive and when.  *  * @author Linus Tolke  */","negative"
"/**      * Make use of the default visibility, which is public...      * TODO: centralise this knowledge.      *      * @see  org.argouml.uml.diagram.ui.AbstractActionRadioMenuItem#valueOfTarget(java.lang.Object)      */","non-negative"
"/*      * TODO: needs documenting, why synchronized?      */","non-negative"
"/**      * The event to fire.     *      * TODO: Investigate! Is the purpose really to let the next call to     * {@link #firePropertyChanged(String, Object, Object)} fire the old      * event again if the previous  invocation resulted in an exception?      * If so, please document why. If not, fix it.      */","negative"
"/**  * **FIXME** This function needs documentation  *   * @return boolean  * @param XmlElement *            E  *  */","non-negative"
"/**  * **FIXME** This function needs documentation  *   * @return Vector  *    */","negative"
"/**  * TODO: JavaDoc  * * @author Colin Bell  */","non-negative"
"/**  * This class manages the windows for the application.  *  * TODO: Correct these notes  * <p>When a session closes the window manager will ensure that  * all of the windows for that sesion are closed.  * <p>Similarily when a window is closed the windows manager will ensure that  * references to the window are removed for the session.  *  * JASON: Prior to this patch there was some code movement from this class to  * Sessionmanager. The idea being that Sessionmanager  was the controller.  * Do we still want to do this? Remember in the future there will probably be  * an SDI as well as MDI version of the windows.  *  * @author <A HREF=""""mailto:colbell@users.sourceforge.net"""">Colin Bell</A>  * @author <A  HREF=""""mailto:jmheight@users.sourceforge.net"""">Jason Height</A>  */ ","non-negative"
"// TODO investigate typo in spec!!","negative"
"// @todo this is duplicating TestResult information. Only the time is not // part of the result. So we'd better derive a new class from TestResult // and deal with it. (SB)","non-negative"
"//TODO enable some proper tests!!","negative"
"/*      * TODO add tests to check for: - name clash - long option abbreviations      * (match shortest unique abbreviation)      */","non-negative"
"// TODO do tests for infix operators (8.4.7), // even though it is not yet supported","non-negative"
"// The UML 2.1.1 metamodel is a MOF 2.0 CMOF model, so // we want nodes with // tag=""""ownedMember"""", attribute xmi:type=""""cmof:Class"""" // TODO: This code is untested - tfm","non-negative"
"// TODO: fix testcase //assertEquals(""""filter result"""", true, result);","non-negative"
"//DMS this is totally untested.","negative"
"// Is getName() ok?  test with 1.1","non-negative"
"// TODO: test that surrogate value is legal.","non-negative"
"// the plot field is NOT tested","negative"
"// Have to think about lazy initialization here...  JHM // comparator = new java.text.RuleBasedCollator();","non-negative"
"//TODO no methods yet for getClassname //TODO no method for newInstance using a reverse-classloader","non-negative"
"// Fix path to allow the use of UNC URLs","non-negative"
"/*          * Have we reached the reporting boundary?          * Need to allow for a margin of error, otherwise can miss the slot.          * Also need to check we've not hit the window already*/ ","non-negative"
"// Now we know that this critic is still valid. What we need to // figure out is if the corresponding to-do item is still valid. // The to-do item is to be replaced if the name of some offender // has changed that affects its description or if the contents // of the list of offenders has changed. // We check that by creating a new ToDoItem and then verifying // that it looks exactly the same. // This really creates a lot of to-do items that goes to waste.","negative"
"// TODO: Should we be doing anything on deleted elements? // This throws an exception on remove events. - skip for now - tfm","non-negative"
"// TODO: Placeholder implementation until support for tracking on // a per-project basis is implemented //        return dirty;","non-negative"
"// TODO: We need a way to set the line color and width here, but // TestDependencies thinks this creates a dependency cycle //        Fig line = new ArgoFigLine(snapX, snapY, snapX, snapY,  //                ArgoFig.LINE_COLOR); //        line.setLineWidth(ArgoFig.LINE_WIDTH);","non-negative"
"// TODO @author hubms show if there is already a virtual folder for // this tag","non-negative"
"//TODO: optimize away this lookup for entities w/o unsaved-value=""""undefined""""","non-negative"
"/*                 Debug utils are static so that they are reachable by code that doesn't                 necessarily have an interpreter reference (e.g. tracing in utils).                 In the future we may want to allow debug/trace to be turned on on                a per interpreter basis, in which case we'll need to use the parent                 reference in some way to determine the scope of the command that                  turns it on or off.        */","non-negative"
"// TODO: draw the interval marker with a 3D effect","non-negative"
"// FIXME: \r logic needed","non-negative"
"// TODO: note lack of command.com support for Win 9x...","non-negative"
"// TODO: check the return value here","non-negative"
"/*                          * TODO: hookup with Interbase spec and adjust these as necessary.                          */","non-negative"
"// TODO: Need to allow user to specify this","non-negative"
"// Just a note: StarTeam has a status for NEW which implies // that there is an item  on your local machine that is not // in the repository.  These are the items that show up as // NOT IN VIEW in the Starteam GUI. // One would think that we would want to perhaps checkin the // NEW items (not in all cases! - Steve Cohen 15 Dec 2001) // Unfortunately, the sdk doesn't really work, and we can't // actually see  anything with a status of NEW. That is why // we can just check out  everything here without worrying // about losing anything.","negative"
"// todo: is this comment still relevant ?? // FIXME: need to use a SAXSource as the source for the transform // so we can plug in our own entity resolver","non-negative"
"/* TODO: correctly implement next function          * in the model subsystem for          * issue 1942: */","non-negative"
"// TODO: Is this next line safe? What happens if there is just one // comment edge or a comment edge and a single message?","non-negative"
"// does not work: r.getFolderName() // does not work: r.getMessage().getUID()","negative"
"/*          * The following types are not supported in RDMS/JDBC and therefore commented out.          * However, in some cases, mapping them to CHARACTER columns works          * for many applications, but does not work for all cases.          */","mixed"
"""/*                  Apparently in some environments you can't catch the security exception                 at all...  e.g. as an applet in IE  ... will probably have to work                  around         */","negative"
"// FIXME: we've cloned the chart, but the dataset(s) aren't cloned // and we should do that","non-negative"
"// TODO: Why do we clone the return value? This is the only reference // to it (right?) so we shouldn't need a separate copy.","non-negative"
"// TODO: This method doesn't appear to be used.","non-negative"
"// TODO: we loose encoding information here, fix it","negative"
"// Bug #1995728 // MS-SQL is inconsistent with regard to setting the current catalog. If you have a database with // periods or spaces, then in some cases you must surround the catalog with quotes. For example,  // if you have a catalog named 'db with spaces' you must execute the following SQL: //  // use """"db with spaces"""" // // However, the same is not always true for the JDBC API method Connection.setCatalog. For some old // versions of Microsoft drivers, you must quote the catalog as well. But for newer versions of the // driver, you must not quote the catalog. So here, we attempt to use the unquoted version first, then // if that fails, we will try quoting it.","non-negative"
"// XXX ignore attributes in a different NS ( maybe store them ? )","non-negative"
"// PR: Hack for ant-type value //  an ant-type is a component name which can // be namespaced, need to extract the name // and convert from qualified name to uri/name","negative"
"/**      * Set the number of milliseconds leeway to give before deciding a      * target is out of date.      * TODO: This is not yet used.      * @param granularity the granularity used to decide if a target is out of      *                    date.      */","non-negative"
"// XXX: we should use JCVS (www.ice.com/JCVS) instead of // command line execution so that we don't rely on having // native CVS stuff around (SM)","non-negative"
"// probably not the best choice, but it solves the problem of // relative paths in CLASSPATH","mixed"
"/**      * TODO: Move this into the toolbar project.      */","non-negative"
"// if """"expression"""" implements one of the combobox, select it // TODO ? Do it in eUML module project ?","non-negative"
"// TODO: // This is actually a hack! Some diagram types // (like the statechart diagrams) access the current // diagram to get some info. This might cause // problems if there's another statechart diagram // active, so I remove the current project, before // loading the new one.","negative"
"// TODO: A minimal update strategy would be better here to // minimize work and events firing, but it may be better to // deprecate the method and force calls to manage updates // themselves (since they probably usually want to just add // or remove a single element) - tfm 20061108","non-negative"
"// TODO: Remove this old implementation after 0.22 if it's // demonstrated that it's not needed. - tfm","non-negative"
"/*      * TODO: Why is this here? Who is calling this?      *      * @see java.beans.VetoableChangeListener#vetoableChange(java.beans.PropertyChangeEvent)      */","negative"
"// TODO: Won't our use of PathComparator take care of uniqueness?","non-negative"
"/*          * Install the trap to """"eat"""" SecurityExceptions.         *          * NOTE: This is temporary and will go away in a """"future"""" release          * http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4714232          */","negative"
"/**  * TODO: this class should be moved to package  * org.argouml.uml.ui.behavior.common_behavior.  */","non-negative"
"// TODO: Encountering a deleted object during // any part of this traversal will // abort the rest of the traversal. // We probably should do the whole traversal // in a single MDR transaction.","non-negative"
"/* TODO: What if used elsewhere? */","non-negative"
"// this is a hack for the multiline column","negative"
"//TODO (@author tstich): do something","non-negative"
"// FIXME: ugly cast to ContactModel","negative"
"// TODO: Should we take some action to ensure signature is valid // html?","non-negative"
"// EATM Call the deprecated method which does the same thing  // but might have an override in older code.","non-negative"
"// TODO // This assumes we only get a SET notification, which isn't a good assumption. //","non-negative"
"//FB TBD can we come up with a better algorithm for choosing the default label feature?","non-negative"
"//DMS What if Eclipse is running, but an invalid facade has been specified?  We still should format code, use encoding,...","non-negative"
"//TODO: to handle concurrent writes correctly, the client should pass in a Lock","non-negative"
"// Do we need to drop constraints before dropping tables in this dialect?","non-negative"
"// todo : again, how *should* this work for non-pojo entities?","non-negative"
"/**      * FIXME Per the RegionFactory class Javadoc, this constructor version      * should not be necessary.      *       * @param props The configuration properties      */","non-negative"
"// todo : would love to have this work on a notification basis //    where the successful binding of an entity/subclass would //    emit a notification which the extendsQueue entries could //    react to...","non-negative"
"// This next bit is to allow for both unsaved-value=""""negative"""" // and for """"older"""" behavior where version number did not get // seeded if it was already set in the object // TODO: shift it into unsaved-value strategy","non-negative"
"// todo : i'd much rather have this done from #endLoadingCollection(CollectionPersister,LoadingCollectionEntry)...","non-negative"
"// todo : should we check the current isolation mode explicitly?","non-negative"
"// should we do this for both cases above?","non-negative"
"// undocumented hack to allow browser actions to work. // XXX - clean up in 4.3","negative"
"// redundant with constructor","negative"
"/*                 Issues to resolve here...                 1) In which classloader should we define the class?                 if there is a BshClassLoader should we define it there?                 2) should we use reflection to set it in a non-bsh classloader                 if there is one or should we always create a bsh classloader                 (and expose its defineClass)? */","non-negative"
"// simplified these settings a little...","non-negative"
"/*                         Wrap nulls.                         This is a bit of a cludge to address a deficiency in the class                        generator whereby it does not wrap nulls on method delegate.  See                        Class Generator.java.  If we fix that then we can remove this.                         (just have to generate the code there.)                 */","negative"
"// Check for field on object  // Note: could eliminate throwing the exception somehow","non-negative"
"// first determine the size of the chart rendering area... // TODO workout insets for SWT","non-negative"
"// TODO: we didn't check the width yet","non-negative"
"// not strictly necessary, since the // renderer set for the // parent plot is not used","non-negative"
"// FIXME:  this code means that it is not possible to use more than // one domain axis for the combined plots...","non-negative"
"// TODO - removes the nodes from the CheckDirty map - should it be done later, in case some can't be removed?","non-negative"
"//TODO replace with proper Exception","negative"
"//This can lead to code smell, meh! Do we care","negative"
"/*      *     * A Dom tree panel for to display response as tree view author <a      * href=""""mailto:d.maung@mdl.com"""">Dave Maung</a>     * TODO implement to find any nodes in the tree using TreePath.     *     */","non-negative"
"// TODO: Does this method need to be public? It isn't currently // called outside of this class.","non-negative"
"// TODO should we allow null for non-primitive types?","non-negative"
"/*          * A little hack - add each listener to the start of the list - this          * ensures that the thread running the show is the first listener and          * can modify certain values before other listeners are called.          */","negative"
"// FIXME: I use a for block to implement END node because we need a proc which captures // its enclosing scope.   ForBlock now represents these node and should be renamed.","non-negative"
"// TODO: // MRI behavior: Call """"+"""" or """"add"""", depending on the call. // But this leads to exceptions when Floats are added. See: // http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-core/17374 // return callCoerced(context, op, b, true); -- this is MRI behavior. // We'll use ours for now, thus providing an ability to add Floats.","non-negative"
"// modules are included with a shim class; we must find that shim to handle super() appropriately","non-negative"
"// Something wrong we don't know the cwd... // TODO: Is this behavior really desirable? /mov","negative"
"// FIXME: Ideally JavaObject instances should be marshallable, which means that // the JavaObject metaclass should have an appropriate allocator. JRUBY-414","non-negative"
"// using IOInputStream may not be the most performance way, but it's easy.","mixed"
"// We clone dynamic scope because this will be a new instance of a block.  Any previously // captured instances of this block may still be around and we do not want to start // overwriting those values when we create a new one. // ENEBO: Once we make self, lastClass, and lastMethod immutable we can remove duplicate","non-negative"
"// FIXME: do we really want 'declared' methods?  includes private/protected, and does _not_ // include superclass methods.  also, the getDeclared calls may throw SecurityException if // we're running under a restrictive security policy.","negative"
"// TODO: These 2 should be handled with an Iterator!!!","negative"
"// TODO: This is a nasty quick hack. Needs an API to do this.","negative"
"/*          * TODO: This should not be public. Check all usages of it          * and put appropriate methods in an API object.          */","non-negative"
"// multiple rows - not good","negative"
"/**  * TODO: Clean this mess up!!!! Load plugins. Load all plugin jars into class loader.  */","negative"
"// TODO: - please add some javadoc - ugly classname also","negative"
"// TODO: Does this still need to be synchronized? If so then explain why.","non-negative"
"/**  * This interface contains methods to retrieve objects that represent the  * different UML types. These objects are use as tokens used to create  * model elements in some methods. *  * TODO: There are parts of ArgoUML which assume that the objects returned  * here are Classes.  We should formalize that by changing the return types to  * match. tfm - 20070620 Bob says - there should be no such assumption in  * ArgoUML. Can we document where these are?  *  * @see org.argouml.model.UmlFactory#buildConnection(  *         Object, Object, Object, Object, Object, Object, Object)  * @see org.argouml.model.UmlFactory#buildNode(Object)*/","non-negative"
"// TODO: Do we need this?","non-negative"
"/* TODO: The Quickguide also mentions:          *   -open <arg>     open given file on startup          *   -print <arg>    print given file on startup (and exit)          * Why are these gone? */","negative"
"/**          * **FIXME** This function needs documentation          *           * @param out          *            OutputStream to print the data to          *            */","non-negative"
"/**  * TODO: Document!  *   * @author penyaskito  */","negative"
"/**      * Returns all substates some composite state contains.      * <p>      * TODO: {@link #getAllPossibleSubvertices(Object)} and     * {@link #getAllSubStates(Object)} are duplicates as implemented for MDR.     * It isn't clear from the Javadoc or usage whether they should do different      * things or this just happened because no one noticed we already had      * another method.      *      * @param compState      *                the given compositestate      * @return all substates      */","non-negative"
"/**      * TODO: Document! What does this do?  Interacts with event pump in some manner      *       * @param objects new objeccts      */","negative"
"// TODO: Document why we catch this.","non-negative"
"/**  * TODO:  * comment field doesn't include all options yet  */","non-negative"
"/*      * The displayName variable stores the value of the """"display-name"""" element      * from the standard EJB descriptor.  As a future enhancement to this task,      * we may determine the name of the EJB JAR file using this display-name,      * but this has not be implemented yet.      */","non-negative"
"// TODO somehow show progress","non-negative"
"// Set the overall status for the transaction sample // TODO: improve, e.g. by adding counts to the SampleResult class","non-negative"
"// TODO: maybe should stop at first, or find highest priority.","non-negative"
"// The following debug line is now the single most memory consuming // line in the whole of ArgoUML. It allocates approximately 18% of // all memory allocated. // Suggestions for solutions: // Check if there is a LOG.log(Level.FINE,String, String) method that can // be used instead. // Use two calls. // For now I (Linus) just comment it out. // LOG.log(Level.FINE, """"applying critic: """" + _headline);","negative"
"// If we weren't given a system ID, attempt to use the URL for the // JAR that we were loaded from.  (Why? - tfm)","non-negative"
"// TODO: Register listener for target ToDo item changes // and for new showStep() requests","non-negative"
"// TODO: @author fdietz replace with regular expression","non-negative"
"// TODO finish marshalling of all available properties","non-negative"
"//FB TBD filter out volatile and other inappropriate links?","non-negative"
"// TODO: handle TypeDefs","non-negative"
"// TODO: bindpropertyresults(alias, returnElem)","non-negative"
"// need to add static block here","non-negative"
"// TODO: I think we need to make sure the keys are actually cloned, // whereas the paint instances are always immutable so they're OK","non-negative"
"// TODO: call config with scope but no frame","non-negative"
"// TODO: Ruby truncates string to specific size here, but our bytelist should handle this already?","non-negative"
"// TODO: pipe handler to be reopened with path and """"w"""" mode","non-negative"
"// TODO: improve this test // $NON-NLS-1$ $NON-NLS-2$ // Missing variable name","non-negative"
"// TODO should this be done even if not a full test plan? // and what if load fails?","non-negative"
"/**      * For modules, it would be usefule to be able to remove their factories.<p>      *       * TODO: The effect of this method is not yet tested!      *      * @param factory the factory to remove      */","negative"
"// TODO: should not be using assert here but I don't want to change to // IllegalStateException at lead up to a release as I don't know how // much testing is done with assert on.","negative"
"// TODO add test methods here. The name must begin with 'test'. For example:","non-negative"
"// TODO: Make into an assert once I get things like blockbodynodes to be implicit nil","non-negative"
"// TODO: We need some way of driving this from panel xml rather // than hard coded test","negative"
"// TODO: Presumably this is only relevant if // obj is actually a Model or Profile. // An added test of isAModel(obj) or isAProfile(obj) would clarify // what is going on here.","non-negative"
